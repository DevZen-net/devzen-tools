// @-ts-nocheck "SOMETHING IS WRONG WITH OPTIONS"
import { expect } from 'chai'
import * as _ from 'lodash'

import { expectType, TypeEqual } from 'ts-expect'
import { equalSetDeep } from '../../../test-utils/specHelpers'
import {
  a_Arguments,
  a_Arguments_indexes,
  a_Array_of_Tvalues,
  a_Array_of_Tvalues_indexes,
  a_Array_of_Tvalues_withCommonAndArrayExtraProps,
  a_Array_ofKeys,
  a_AsyncGenerator_of_Tvalues_withCommonProps,
  a_Employee,
  a_Generator_of_Tvalues_withCommonProps,
  a_instance_withCommonProps,
  a_Map_of_TMapKeys_Tvalues,
  a_Map_of_TMapKeys_Tvalues_WithCommonProps,
  a_Person,
  a_Set_of_Tvalues,
  a_Set_of_Tvalues_withCommonProps,
  a_TypedArray_Int32Array,
  a_TypedArray_Int32Array_indexes,
  a_TypedArray_Int32Array_withCommonAndArrayExtraProps,
  add_CommonProps,
  arrayAndCommonStringProps,
  ArrayOfValuesWithCommonProps,
  commonStringProps,
  commonSymbolProps,
  employee_stringNonEnumerablesInherited,
  employeeStringProps,
  employeeSymbolProps,
  get_arguments,
  get_arrayBuffer_Uint8,
  get_AsyncGenerator_of_Tvalues,
  get_Generator_of_Tvalues,
  noPropsKeysOptionsAsConst,
  noPropsKeysOptionsTyped,
  noPropsKeysOptionsUntyped,
  person_stringNonEnumerablesInherited,
  personStringProps,
  personSymbolProps,
  pojsoCommonProps,
  symbolProp,
  symbolProp2,
  TMapKeys,
  Tvalues,
} from '../../../test-utils/test-data'
import {
  arguments_prototype_stringNonEnumerablesInherited,
  arguments_prototype_stringNonEnumerablesInherited_ES2023,
  arguments_prototype_stringNonEnumerablesOwn,
  arguments_prototype_symbolNonEnumerablesInherited,
  arguments_prototype_symbolNonEnumerablesOwn,
  array_prototype_stringNonEnumerablesInherited,
  array_prototype_stringNonEnumerablesInherited_ES2023,
  array_prototype_stringNonEnumerablesOwn,
  array_prototype_symbolNonEnumerablesInherited,
  arrayBuffer_prototype_stringNonEnumerablesInherited,
  arrayBuffer_prototype_stringNonEnumerablesOwn,
  arrayBuffer_prototype_symbolNonEnumerablesInherited,
  asyncGenerator_prototype_stringNonEnumerablesInherited,
  asyncGenerator_prototype_stringNonEnumerablesOwn,
  asyncGenerator_prototype_symbolNonEnumerablesInherited,
  boxedBoolean_prototype_stringNonEnumerablesInherited,
  boxedBoolean_prototype_stringNonEnumerablesOwn,
  boxedBoolean_prototype_symbolNonEnumerablesInherited,
  boxedNumber_prototype_stringNonEnumerablesInherited,
  boxedNumber_prototype_stringNonEnumerablesOwn,
  boxedNumber_prototype_symbolNonEnumerablesInherited,
  boxedString_prototype_stringNonEnumerablesInherited,
  boxedString_prototype_stringNonEnumerablesInherited_ES2023,
  boxedString_prototype_stringNonEnumerablesOwn,
  boxedString_prototype_symbolNonEnumerablesInherited,
  dataView_prototype_stringNonEnumerablesInherited,
  dataView_prototype_stringNonEnumerablesInherited_ES2023,
  dataView_prototype_stringNonEnumerablesOwn,
  dataView_prototype_symbolNonEnumerablesInherited,
  date_prototype_stringNonEnumerablesInherited,
  date_prototype_stringNonEnumerablesInherited_ES2023,
  date_prototype_stringNonEnumerablesOwn,
  date_prototype_symbolNonEnumerablesInherited,
  error_prototype_stringNonEnumerablesInherited,
  error_prototype_stringNonEnumerablesInherited_ES2023,
  error_prototype_stringNonEnumerablesOwn,
  error_prototype_symbolNonEnumerablesInherited,
  function_prototype_stringNonEnumerablesInherited,
  function_prototype_stringNonEnumerablesInherited_ES2023,
  function_prototype_stringNonEnumerablesOwn,
  function_prototype_symbolNonEnumerablesInherited,
  generator_prototype_stringNonEnumerablesInherited,
  generator_prototype_stringNonEnumerablesOwn,
  generator_prototype_symbolNonEnumerablesInherited,
  map_prototype_stringNonEnumerablesInherited,
  map_prototype_stringNonEnumerablesOwn,
  map_prototype_symbolNonEnumerablesInherited,
  object_stringNonEnumerablesInheritedTop,
  promise_prototype_stringNonEnumerablesInherited,
  promise_prototype_stringNonEnumerablesInherited_ES2023,
  promise_prototype_stringNonEnumerablesOwn,
  promise_prototype_symbolNonEnumerablesInherited,
  regExp_prototype_stringNonEnumerablesInherited,
  regExp_prototype_stringNonEnumerablesInherited_ES2023,
  regExp_prototype_stringNonEnumerablesOwn,
  regExp_prototype_symbolNonEnumerablesInherited,
  set_prototype_stringNonEnumerablesInherited,
  set_prototype_stringNonEnumerablesOwn,
  set_prototype_symbolNonEnumerablesInherited,
  setOrMapEntries_prototype_stringNonEnumerablesInherited,
  setOrMapEntries_prototype_stringNonEnumerablesOwn,
  setOrMapEntries_prototype_symbolNonEnumerablesInherited,
  typedArray_prototype_stringNonEnumerablesInherited,
  typedArray_prototype_stringNonEnumerablesInherited_ES2023,
  typedArray_prototype_stringNonEnumerablesOwn,
  typedArray_prototype_symbolNonEnumerablesInherited,
} from '../../typezen/types-info'
import { keysS } from '../keys'

const expected_stringNonEnumerablesInheritedTop = object_stringNonEnumerablesInheritedTop
type Texpected_stringNonEnumerablesInheritedTop = string

describe('z.keysS() (string|symbol)[] only Typings & Run-time par Tests', () => {
  describe(`# Many`, () => {
    describe(`## Many, with InspectableNested (Array, TypedArray, Map, Set, Arguments, ArrayBuffer)`, () => {
      describe(`# Array - with Nested Keys/Values (indexes/elements). #R11-#R12`, () => {
        const inputTitle = `Array` // just for title
        const getInputVanilla = () => a_Array_of_Tvalues // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => a_Array_of_Tvalues_withCommonAndArrayExtraProps // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = true // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : a_Array_of_Tvalues_indexes // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = arrayAndCommonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = array_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = [...array_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? array_prototype_stringNonEnumerablesInherited_ES2023 : [])]
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = array_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R11`, () => {
          describe('default/weird options - props assumed false. Returns Inspectable NestedKeys OR own enumerable props', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions as const`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsAsConst)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongUnknownOptions`, () => {
              // @ts-expect-error OK TS2345: Argument of type unknown is not assignable to parameter of type KeysOptions | undefined
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as unknown)
            })
          })
          describe('props: false / undefined (default) - returns Inspectable NestedKeys OR own enumerable props', () => {
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - get natural values`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# ArrayOfValuesWithCommonProps - with InspectableNested (indexes). #R10-#R12`, () => {
        const inputTitle = `Array` // just for title
        class MyArray extends Array<Tvalues> {
          constructor() {
            super()
            this.push(...a_Array_of_Tvalues)
          }
        }
        const getInputVanilla = () => new MyArray() // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => new ArrayOfValuesWithCommonProps() // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = true // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : a_Array_of_Tvalues_indexes // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = arrayAndCommonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = array_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = [...array_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? array_prototype_stringNonEnumerablesInherited_ES2023 : [])]
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = array_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - get natural values`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# TypedArray Int32Array - with InspectableNested. Negative numeric prop is not written, unlike Array. #R10-#R12`, () => {
        const inputTitle = `TypedArray Int32Array` // just for title
        const getInputVanilla = () => a_TypedArray_Int32Array // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => a_TypedArray_Int32Array_withCommonAndArrayExtraProps // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from  their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = true // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : a_TypedArray_Int32Array_indexes // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = typedArray_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = [...typedArray_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? typedArray_prototype_stringNonEnumerablesInherited_ES2023 : [])]
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = typedArray_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# Arguments - with InspectableNested (StringNumber indexes). #R10-#R12`, () => {
        const inputTitle = `Arguments` // just for title
        const getInputVanilla = () => a_Arguments // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(get_arguments()) // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = true // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : `${number}` // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : a_Arguments_indexes // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = arguments_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = arguments_prototype_symbolNonEnumerablesOwn
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = [...arguments_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? arguments_prototype_stringNonEnumerablesInherited_ES2023 : [])]
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = arguments_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# Set: with Nested Keys (Set<TSetKeys>) Note: keys of Set are just a_Array_of_Tvalues(), so z.keysS() bring the values of the Set. #R10-#R12`, () => {
        const inputTitle = `Set (with TSetKeys natural keys)` // just for title
        const getInputVanilla = () => a_Set_of_Tvalues // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => a_Set_of_Tvalues_withCommonProps // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from  their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = true // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : Tvalues // if isInspectableNested is true, set the actual Nested Values type, eg Tvalues. If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : a_Array_of_Tvalues // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = set_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = set_prototype_stringNonEnumerablesInherited
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = set_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# Map: with Nested Keys (Map<TMapKeys, any>) Note: keys of Map are TMapKeys. #R10-#R12`, () => {
        const inputTitle = `Map (with TMapKeys natural keys)` // just for title
        const getInputVanilla = () => a_Map_of_TMapKeys_Tvalues // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => a_Map_of_TMapKeys_Tvalues_WithCommonProps // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from  their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = true // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : TMapKeys // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : a_Array_ofKeys // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = map_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = map_prototype_stringNonEnumerablesInherited
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = map_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe.skip('# ArrayBuffer - with InspectableNested #R10-#R12', () => {
        const inputTitle = `ArrayBuffer Uint8` // just for title
        const getInputVanilla = () => get_arrayBuffer_Uint8() // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(get_arrayBuffer_Uint8()) // like above, WECP

        const isInspectableNested = true // Set entries don't get iterated (they cant't be restarted), so keys are not returned

        type TexpectedInspectableNested_keys = number
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = _.times(get_arrayBuffer_Uint8().byteLength)

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = arrayBuffer_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesInherited = arrayBuffer_prototype_stringNonEnumerablesInherited
        type Texpected_symbolNonEnumerablesInherited = symbol // lying, but cant do otherwise!
        const expected_symbolNonEnumerablesInherited = arrayBuffer_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R11`, () => {
          describe('default/weird options - props assumed false. Returns Inspectable NestedKeys OR own enumerable props', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions as const`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsAsConst)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongUnknownOptions`, () => {
              // @ts-expect-error OK TS2345: Argument of type unknown is not assignable to parameter of type KeysOptions | undefined
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as unknown)
            })
          })
          describe('props: false / undefined (default) - returns Inspectable NestedKeys OR own enumerable props', () => {
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
    })
    describe(`## Many, with No InspectableNested`, () => {
      describe('# Set Entries - #R10-#R12', () => {
        const inputTitle = `Set Entries` // just for title
        const getInputVanilla = () => a_Set_of_Tvalues.entries() // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(a_Set_of_Tvalues.entries()) // like above, WECP

        const isInspectableNested = false // Set entries don't get iterated (they cant't be restarted), so keys are not returned

        type TexpectedInspectableNested_keys = never // POJSO/instances don't have NestedKeys, their props are the keys!
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = [] // POJSO/instances don't have NestedKeys, their props are the keys!

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesOwn = setOrMapEntries_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesInherited = setOrMapEntries_prototype_stringNonEnumerablesInherited
        type Texpected_symbolNonEnumerablesInherited = symbol // lying, but cant do otherwise!
        const expected_symbolNonEnumerablesInherited = setOrMapEntries_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe('# Map Entries - #R10-#R12', () => {
        const inputTitle = `Map Entries` // just for title
        const getInputVanilla = () => a_Map_of_TMapKeys_Tvalues.entries() // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(a_Map_of_TMapKeys_Tvalues.entries()) // like above, WECP

        const isInspectableNested = false // Set entries don't get iterated (they cant't be restarted), so keys are not returned

        type TexpectedInspectableNested_keys = never // POJSO/instances don't have NestedKeys, their props are the keys!
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = [] // POJSO/instances don't have NestedKeys, their props are the keys!

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesOwn = setOrMapEntries_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesInherited = setOrMapEntries_prototype_stringNonEnumerablesInherited
        type Texpected_symbolNonEnumerablesInherited = symbol // lying, but cant do otherwise!
        const expected_symbolNonEnumerablesInherited = setOrMapEntries_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })

      describe('# Generator - #R10-#R12', () => {
        const inputTitle = `Generator` // just for title
        const getInputVanilla = () => get_Generator_of_Tvalues() // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => a_Generator_of_Tvalues_withCommonProps // like above, WECP

        const isInspectableNested = false // Set entries don't get iterated (they cant't be restarted), so keys are not returned

        type TexpectedInspectableNested_keys = never // POJSO/instances don't have NestedKeys, their props are the keys!
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = [] // POJSO/instances don't have NestedKeys, their props are the keys!

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesOwn = generator_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesInherited = generator_prototype_stringNonEnumerablesInherited
        type Texpected_symbolNonEnumerablesInherited = symbol // lying, but cant do otherwise!
        const expected_symbolNonEnumerablesInherited = generator_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe('# AsyncGenerator - #R10-#R12', () => {
        const inputTitle = `AsyncGenerator` // just for title
        const getInputVanilla = () => get_AsyncGenerator_of_Tvalues() // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => a_AsyncGenerator_of_Tvalues_withCommonProps // like above, WECP

        const isInspectableNested = false // Set entries don't get iterated (they cant't be restarted), so keys are not returned

        type TexpectedInspectableNested_keys = never // POJSO/instances don't have NestedKeys, their props are the keys!
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = [] // POJSO/instances don't have NestedKeys, their props are the keys!

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesOwn = asyncGenerator_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesInherited = asyncGenerator_prototype_stringNonEnumerablesInherited
        type Texpected_symbolNonEnumerablesInherited = symbol // lying, but cant do otherwise!
        const expected_symbolNonEnumerablesInherited = asyncGenerator_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })

      describe(`# realObject / POJSO (of Common Props) #R12`, () => {
        const inputTitle = `realObject / POJSO` // just for title
        const getInputWithExtraCommonProps = () => pojsoCommonProps // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from  their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : never // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesOwn = symbol // lying, but cant do otherwise!
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesInherited = []
        type Texpected_symbolNonEnumerablesInherited = symbol // lying, but cant do otherwise!
        const expected_symbolNonEnumerablesInherited = []

        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                string: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# realObject / instance (of a Base-class): Person #R12`, () => {
        const inputTitle = `realObject / instance / Person` // just for title
        const getInputWithExtraCommonProps = () => a_Person // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from  their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : never // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        // Note: we're lying here, we're returning all props, including inherited// @todo(888): add link to ownKeyof issue
        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = personStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = personSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        // @todo(444): we're lying here, we're returning all props, including own
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = person_stringNonEnumerablesInherited
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = []

        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# realObject / instance (of a Sub-class): Employee #R12`, () => {
        const inputTitle = `realObject / subclass instance / Employee` // just for title
        const getInputWithExtraCommonProps = () => a_Employee // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from  their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : never // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        // Note: we're lying here, we're returning all props, including inherited // @todo(888): add link to ownKeyof issue
        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = [...personStringProps, ...employeeStringProps] // eg set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = [...personSymbolProps, ...employeeSymbolProps] // eg set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []

        // Note: we're lying here, we're returning all props, including own
        // @todo(888): add link to ownKeyof issue
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited: (Texpected_stringNonEnumerablesInherited | 'constructor')[] = [...person_stringNonEnumerablesInherited, ...employee_stringNonEnumerablesInherited]
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited: Texpected_symbolNonEnumerablesInherited[] = []

        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe('# realObject / instance (of a class): CommonProps - with extra `constructor` #R12', () => {
        const inputTitle = `realObject / instance / CommonProps` // just for title
        const getInputWithExtraCommonProps = () => a_instance_withCommonProps // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from  their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : never // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other

        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesInherited = symbol // lying, but cant do otherwise!
        const expected_symbolNonEnumerablesInherited = []
        type Texpected_stringNonEnumerablesInherited = string // lying, but cant do otherwise!
        const expected_stringNonEnumerablesInherited = ['constructor'] as const

        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                string: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
    })
  })
  describe(`# Single`, () => {
    describe(`# Boxed Primitives`, () => {
      describe(`# Number (Boxed Primitive) #R10-follows-requested-#R12`, () => {
        const inputTitle = `Number()` // just for title
        const getInputVanilla = () => new Number(123) // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(new Number(123)) // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = never // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = boxedNumber_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = boxedNumber_prototype_symbolNonEnumerablesInherited
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = boxedNumber_prototype_stringNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# Boolean (Boxed Primitive) #R10-follows-requested-#R12`, () => {
        const inputTitle = `Boolean()` // just for title
        const getInputVanilla = () => new Boolean(true) // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(new Boolean(false)) // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = boxedBoolean_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = boxedBoolean_prototype_stringNonEnumerablesInherited
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = boxedBoolean_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# String (Boxed Primitive) #R10-follows-requested-#R12`, () => {
        const inputTitle = `String()` // just for title
        const getInputVanilla = () => new String('foo') // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(new String('bar')) // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = boxedString_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = [...boxedString_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? boxedString_prototype_stringNonEnumerablesInherited_ES2023 : [])]
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = boxedString_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
    })

    describe(`# Primitives - never`, () => {
      const expected_stringNonEnumerablesInheritedTop = []
      type Texpected_stringNonEnumerablesInheritedTop = never

      describe('# Primitive: null #R10-never-#R12-never', () => {
        const inputTitle = `Primitive: null` // just for title
        const getInputVanilla = (): null => null // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = (): null => null // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from  their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : never // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = never // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = never // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = [] // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = [] // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = never
        const expected_stringNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesOwn = never
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = never
        const expected_stringNonEnumerablesInherited = []
        type Texpected_symbolNonEnumerablesInherited = never
        const expected_symbolNonEnumerablesInherited = []

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns never[]`, () => {
            it(`props: true - returns never[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, never[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns never[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, never[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns never[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, never[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns never[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, never[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, never[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, never[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // never[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns never[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe('# Primitive: undefined #R10-#R12', () => {
        const inputTitle = `Primitive: undefined` // just for title
        const getInputVanilla = () => undefined // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => undefined // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from  their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : never // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = never // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = never // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = [] // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = [] // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = never
        const expected_stringNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesOwn = never
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = never
        const expected_stringNonEnumerablesInherited = []
        type Texpected_symbolNonEnumerablesInherited = never
        const expected_symbolNonEnumerablesInherited = []

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns never[]`, () => {
            it(`props: true - returns never[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, never[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns never[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, never[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns never[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, never[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns never[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, never[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, never[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, never[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // never[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns never[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe('# Primitive: string #R10-#R12', () => {
        const inputTitle = `Primitive: string` // just for title
        const getInputVanilla = () => 'some string' // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => 'some string' // like above, WECP

        const isInspectableNested = false // Set entries don't get iterated (they cant't be restarted), so keys are not returned

        type TexpectedInspectableNested_keys = never // POJSO/instances don't have NestedKeys, their props are the keys!
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = [] // POJSO/instances don't have NestedKeys, their props are the keys!

        type Texpected_stringOwnProps = never // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = never // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = [] // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = [] // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = never
        const expected_stringNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesOwn = never
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = never
        const expected_stringNonEnumerablesInherited = []
        type Texpected_symbolNonEnumerablesInherited = never
        const expected_symbolNonEnumerablesInherited = []

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns never[]`, () => {
            it(`props: true - returns never[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, never[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns never[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, never[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns never[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, never[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns never[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, never[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, never[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, never[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // never[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns never[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe('# Primitive: number #R10-#R12', () => {
        const inputTitle = `Primitive: number` // just for title
        const getInputVanilla = () => 1984 // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => 1984.42 // like above, WECP

        const isInspectableNested = false // Set entries don't get iterated (they cant't be restarted), so keys are not returned

        type TexpectedInspectableNested_keys = never // POJSO/instances don't have NestedKeys, their props are the keys!
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = [] // POJSO/instances don't have NestedKeys, their props are the keys!

        type Texpected_stringOwnProps = never // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = never // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = [] // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = [] // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = never
        const expected_stringNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesOwn = never
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = never
        const expected_stringNonEnumerablesInherited = []
        type Texpected_symbolNonEnumerablesInherited = never
        const expected_symbolNonEnumerablesInherited = []

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns never[]`, () => {
            it(`props: true - returns never[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, never[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns never[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, never[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns never[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, never[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns never[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, never[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, never[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, never[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // never[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns never[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe('# Primitive: boolean #R10-#R12', () => {
        const inputTitle = `Primitive: boolean` // just for title
        const getInputVanilla = () => true // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => false // like above, WECP

        const isInspectableNested = false // Set entries don't get iterated (they cant't be restarted), so keys are not returned

        type TexpectedInspectableNested_keys = never // POJSO/instances don't have NestedKeys, their props are the keys!
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = [] // POJSO/instances don't have NestedKeys, their props are the keys!

        type Texpected_stringOwnProps = never // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = never // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = [] // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = [] // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = never
        const expected_stringNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesOwn = never
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = never
        const expected_stringNonEnumerablesInherited = []
        type Texpected_symbolNonEnumerablesInherited = never
        const expected_symbolNonEnumerablesInherited = []

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns never[]`, () => {
            it(`props: true - returns never[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, never[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns never[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, never[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns never[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, never[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns never[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, never[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, never[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, never[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // never[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns never[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe('# Primitive: symbol #R10-#R12', () => {
        const inputTitle = `Primitive: symbol` // just for title
        const getInputVanilla = () => symbolProp // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => symbolProp2 // like above, WECP

        const isInspectableNested = false // Set entries don't get iterated (they cant't be restarted), so keys are not returned

        type TexpectedInspectableNested_keys = never // POJSO/instances don't have NestedKeys, their props are the keys!
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = [] // POJSO/instances don't have NestedKeys, their props are the keys!

        type Texpected_stringOwnProps = never // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = never // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = [] // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = [] // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = never
        const expected_stringNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesOwn = never
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = never
        const expected_stringNonEnumerablesInherited = []
        type Texpected_symbolNonEnumerablesInherited = never
        const expected_symbolNonEnumerablesInherited = []

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns never[]`, () => {
            it(`props: true - returns never[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, never[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns never[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, never[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns never[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, never[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns never[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, never[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, never[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, never[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // never[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns never[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe('# Primitive: bigint #R10-#R12', () => {
        const inputTitle = `Primitive: bigint` // just for title
        const getInputVanilla = () => 123n // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => 123n // like above, WECP

        const isInspectableNested = false // Set entries don't get iterated (they cant't be restarted), so keys are not returned

        type TexpectedInspectableNested_keys = never // POJSO/instances don't have NestedKeys, their props are the keys!
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = [] // POJSO/instances don't have NestedKeys, their props are the keys!

        type Texpected_stringOwnProps = never // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = never // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = [] // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = [] // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = never
        const expected_stringNonEnumerablesOwn = []
        type Texpected_symbolNonEnumerablesOwn = never
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = never
        const expected_stringNonEnumerablesInherited = []
        type Texpected_symbolNonEnumerablesInherited = never
        const expected_symbolNonEnumerablesInherited = []

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns never[]`, () => {
            it(`props: true - returns never[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, never[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns never[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, never[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns never[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, never[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns never[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, never[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, never[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, never[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, never[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // never[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns never[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty never[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, never[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
    })

    describe(`# Object Singles`, () => {
      describe(`# Date #R10-follows-requested-#R12`, () => {
        const inputTitle = `Date()` // just for title
        const getInputVanilla = () => new Date() // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(new Date()) // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = date_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = [...date_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? date_prototype_stringNonEnumerablesInherited_ES2023 : [])]
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = date_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# DataView #R10-follows-requested-#R12`, () => {
        const inputTitle = `DataView()` // just for title
        const getInputVanilla = () => new DataView(new ArrayBuffer(1)) // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(new DataView(new ArrayBuffer(1))) // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = dataView_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = [...dataView_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? dataView_prototype_stringNonEnumerablesInherited_ES2023 : [])]
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = dataView_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# Error #R10-follows-requested-#R12`, () => {
        const inputTitle = `Error()` // just for title
        const getInputVanilla = () => new Error('foo', { cause: 'Error cause' }) // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(new Error('foo', { cause: 'Error cause' })) // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = error_prototype_stringNonEnumerablesOwn
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = [...error_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? error_prototype_stringNonEnumerablesInherited_ES2023 : [])]
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = error_prototype_symbolNonEnumerablesInherited

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# Promise #R10-follows-requested-#R12`, () => {
        const inputTitle = `Promise` // just for title
        const getInputVanilla = () => Promise.resolve(1) // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(Promise.resolve(2)) // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = [...promise_prototype_stringNonEnumerablesOwn]
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = [...promise_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? promise_prototype_stringNonEnumerablesInherited_ES2023 : [])]
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = [...promise_prototype_symbolNonEnumerablesInherited]

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# RegExp #R10-follows-requested-#R12`, () => {
        const inputTitle = `RegExp` // just for title
        const getInputVanilla = () => new RegExp('foo') // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
        const getInputWithExtraCommonProps = () => add_CommonProps(new RegExp('foo')) // like above, WECP

        // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
        const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
        type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
        const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

        type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
        type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
        const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
        const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

        // prototype / base-type props
        type Texpected_stringNonEnumerablesOwn = string
        const expected_stringNonEnumerablesOwn = [...regExp_prototype_stringNonEnumerablesOwn]
        type Texpected_symbolNonEnumerablesOwn = symbol
        const expected_symbolNonEnumerablesOwn = []
        type Texpected_stringNonEnumerablesInherited = string
        const expected_stringNonEnumerablesInherited = [...regExp_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? regExp_prototype_stringNonEnumerablesInherited_ES2023 : [])]
        type Texpected_symbolNonEnumerablesInherited = symbol
        const expected_symbolNonEnumerablesInherited = [...regExp_prototype_symbolNonEnumerablesInherited]

        describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
            it(`keys_NoOptions`, () => {
              const keys_NoOptions = keysS(getInputVanilla())
              expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
              expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_EmptyOptions`, () => {
              const keys_EmptyOptions = keysS(getInputVanilla(), {})
              expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
              expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions literal`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                enumerables: true,
                own: true,
                strict: false,
                inherited: false,
                top: false,
                nonEnumerables: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions untyped`, () => {
              const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
              expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsKeysOptions TYPED`, () => {
              const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
              expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
              expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
              const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: true,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
              expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
              const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                ...noPropsKeysOptionsUntyped,
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
              expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_WrongAnyOptions`, () => {
              const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

              expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
              expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalse`, () => {
              const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
              expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
              expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsFalseStringSymbols`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
              expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_PropsUndefined`, () => {
              const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
              expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
              expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolIgnored`, () => {
              const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
              expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
              expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsSymbolFalseIgnored`, () => {
              const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
              expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringIgnored`, () => {
              const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
              expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
              expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys_NoPropsStringFalseIgnored`, () => {
              const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                string: false,
              })
              expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`keys all filters true, except props - returns NestedKeys`, () => {
              const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                props: false,
                string: true,
                symbol: true,
                inherited: true,
                nonEnumerables: true,
                enumerables: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsFalseStringSymbols,
                  typeof isInspectableNested extends true
                    ? TexpectedInspectableNested_keys[]
                    : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(
                keys_PropsFalseStringSymbols,
                isInspectableNested
                  ? expectedInspectableNested_keys
                  : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
              )
            })
          })
          describe(`props: true - returns string[]`, () => {
            it(`props: true - returns string[]`, () => {
              const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
              expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
              expect(keys_PropsTrue).to.deep.equal([])
            })
            it(`props: true, symbol: true - returns string[]`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
              expect(keys_PropsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: true - returns string[]`, () => {
              const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
              expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
            })
            it(`props: true, string: false & symbols: false - returns string[]`, () => {
              const keys_PropsNever = keysS(getInputVanilla(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
              expect(keys_PropsNever).to.deep.equal([])

              const keys_PropsNever2 = keysS(getInputVanilla(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
              expect(keys_PropsNever2).to.deep.equal([])
            })
          })
          describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
            it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
              const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

              const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
              equalSetDeep(keys_PropsNonEnumerablesFalse, [])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_PropsNonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
          describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`props: "all" - defaults`, () => {
              const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
              expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
              expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", symbol: true`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: true`, () => {
              const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
              expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
            })
            it(`props: "all", string: false, symbol: false`, () => {
              const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

              const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
              const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

              const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
              equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

              const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited | TexpectedInspectableNested_keys)[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expectedInspectableNested_keys,
              ])
            })
            it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
              const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_AllNonEnumerablesUndefinedDefault,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
          })
        })
        describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
          describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
            it(`no options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`empty options - defaults`, () => {
              const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
              expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`all irrelevant options, if props: false | undefined`, () => {
              const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                  typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                  // string[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
              const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                foo: 'bar',
              } as any)

              expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`props: false | undefined & others default`, () => {
              const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                props: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

              const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                props: undefined,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
            it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
              const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

              const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                props: false,
                symbol: true,
              })
              expectType<
                TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
              >(true)
              equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                props: false,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
            })
          })
          describe('props: true - simple - returns own & enumerable props only', () => {
            it(`props: true - returns string props only`, () => {
              const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
            })
            it(`props: true, symbol: true - returns string & symbol props`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
              const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
              equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
            })
            it(`props: true, string: false, symbol: false - returns string[]`, () => {
              const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

              const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
            })
          })
          describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
                true
              )
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                  (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
            })
            it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: true,
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [])
            })
          })
          describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
            it(`props: "all" returns "natural keys" & string props`, () => {
              const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: true,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                string: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
            })
            it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
              const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
            })
            it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
              const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

              const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                string: false,
                symbol: false,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
              equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
            })
          })
          describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
            it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
              const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                // inherited: false // default
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])

              const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: false, // explicit
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                  (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                ...expectedInspectableNested_keys,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
              ])
            })
            it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                // nonEnumerables: false, // default
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

              const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: false, // explicit
                inherited: true,
                top: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
            })
            it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
              const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })

              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                  (
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
              ])
            })
            it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
              const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
                top: true,
              })
              expectType<
                TypeEqual<
                  typeof keys_valueWithProps_All,
                  (
                    | TexpectedInspectableNested_keys
                    | Texpected_stringOwnProps
                    | Texpected_symbolOwnProps
                    | Texpected_stringNonEnumerablesOwn
                    | Texpected_symbolNonEnumerablesOwn
                    | Texpected_stringNonEnumerablesInherited
                    | Texpected_symbolNonEnumerablesInherited
                    | Texpected_stringNonEnumerablesInheritedTop
                  )[]
                >
              >(true)
              equalSetDeep(keys_valueWithProps_All, [
                ...expectedInspectableNested_keys,
                ...expected_stringOwnProps,
                ...expected_symbolOwnProps,
                ...expected_stringNonEnumerablesOwn,
                ...expected_symbolNonEnumerablesOwn,
                ...expected_stringNonEnumerablesInherited,
                ...expected_symbolNonEnumerablesInherited,
                ...expected_stringNonEnumerablesInheritedTop,
              ])
            })
            it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: true,
                inherited: true,
              })
              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
            })
            it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
              const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                own: false,
                props: 'all',
                symbol: true,
                nonEnumerables: false,
                inherited: true,
              })

              expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
              equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
            })
          })
        })
      })
      describe(`# Functions #R10-follows-requested-#R12`, () => {
        describe(`# Function - normal #R10-#R12`, () => {
          const inputTitle = `Function - normal named/unnamed function` // just for title
          const getInputVanilla = () => function named() {} // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
          const getInputWithExtraCommonProps = () => add_CommonProps(function named2() {}) // like above, WECP

          // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
          const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
          type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
          const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

          type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
          type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
          const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
          const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

          // prototype / base-type props
          type Texpected_stringNonEnumerablesOwn = string
          const expected_stringNonEnumerablesOwn = [...function_prototype_stringNonEnumerablesOwn, 'prototype']
          type Texpected_symbolNonEnumerablesOwn = symbol
          const expected_symbolNonEnumerablesOwn = []
          type Texpected_stringNonEnumerablesInherited = string
          const expected_stringNonEnumerablesInherited = [...function_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? function_prototype_stringNonEnumerablesInherited_ES2023 : [])]
          type Texpected_symbolNonEnumerablesInherited = symbol
          const expected_symbolNonEnumerablesInherited = function_prototype_symbolNonEnumerablesInherited

          describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
            describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
              it(`keys_NoOptions`, () => {
                const keys_NoOptions = keysS(getInputVanilla())
                expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
                expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_EmptyOptions`, () => {
                const keys_EmptyOptions = keysS(getInputVanilla(), {})
                expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
                expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions literal`, () => {
                const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                  enumerables: true,
                  own: true,
                  strict: false,
                  inherited: false,
                  top: false,
                  nonEnumerables: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
                expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions untyped`, () => {
                const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
                expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions TYPED`, () => {
                const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
                expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
                const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                  ...noPropsKeysOptionsUntyped,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
                expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
                const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                  ...noPropsKeysOptionsUntyped,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
                expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_WrongAnyOptions`, () => {
                const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

                expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
                expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsFalse`, () => {
                const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
                expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
                expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsFalseStringSymbols`, () => {
                const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                  props: false,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
                expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsUndefined`, () => {
                const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
                expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
                expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsSymbolIgnored`, () => {
                const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
                expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
                expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsSymbolFalseIgnored`, () => {
                const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
                expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsStringIgnored`, () => {
                const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
                expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
                expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsStringFalseIgnored`, () => {
                const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                  string: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys all filters true, except props - returns NestedKeys`, () => {
                const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                  props: false,
                  string: true,
                  symbol: true,
                  inherited: true,
                  nonEnumerables: true,
                  enumerables: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsFalseStringSymbols,
                    typeof isInspectableNested extends true
                      ? TexpectedInspectableNested_keys[]
                      : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                  >
                >(true)
                equalSetDeep(
                  keys_PropsFalseStringSymbols,
                  isInspectableNested
                    ? expectedInspectableNested_keys
                    : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
                )
              })
            })
            describe(`props: true - returns string[]`, () => {
              it(`props: true - returns string[]`, () => {
                const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
                expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
                expect(keys_PropsTrue).to.deep.equal([])
              })
              it(`props: true, symbol: true - returns string[]`, () => {
                const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
                expect(keys_PropsSymbolTrue).to.deep.equal([])
              })
              it(`props: true, string: false & symbols: true - returns string[]`, () => {
                const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
                expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
              })
              it(`props: true, string: false & symbols: false - returns string[]`, () => {
                const keys_PropsNever = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
                expect(keys_PropsNever).to.deep.equal([])

                const keys_PropsNever2 = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
                expect(keys_PropsNever2).to.deep.equal([])
              })
            })
            describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
              it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
                const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

                const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

                const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
                equalSetDeep(keys_PropsNonEnumerablesFalse, [])
              })
              it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsNonEnumerablesUndefinedDefault,
                    (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                  >
                >(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsNonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
            })
            describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
              it(`props: "all" - defaults`, () => {
                const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
                expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
                expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", symbol: true`, () => {
                const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", string: false, symbol: true`, () => {
                const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
                expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", string: false, symbol: false`, () => {
                const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

                const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
              })
            })
            describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
                const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

                const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

                const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
              })
              it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_AllNonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | TexpectedInspectableNested_keys
                    )[]
                  >
                >(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expectedInspectableNested_keys,
                ])
              })
              it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_AllNonEnumerablesUndefinedDefault,
                    (
                      | TexpectedInspectableNested_keys
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
            })
          })
          describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
            describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
              it(`no options - defaults`, () => {
                const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
                expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`empty options - defaults`, () => {
                const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
                expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`all irrelevant options, if props: false | undefined`, () => {
                const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                    typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                    // string[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
                const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                  foo: 'bar',
                } as any)

                expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`props: false | undefined & others default`, () => {
                const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

                const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                  props: undefined,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
                const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

                const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  symbol: true,
                })
                expectType<
                  TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
                >(true)
                equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
            })
            describe('props: true - simple - returns own & enumerable props only', () => {
              it(`props: true - returns string props only`, () => {
                const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
              })
              it(`props: true, symbol: true - returns string & symbol props`, () => {
                const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
                const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
              })
              it(`props: true, string: false, symbol: false - returns string[]`, () => {
                const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

                const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
              })
            })
            describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
                const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<
                  TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
                >(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                    (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
                const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_All,
                    (
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_All, [
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
              it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
              })
              it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
              })
              it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  symbol: true,
                  nonEnumerables: false,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [])
              })
            })
            describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
              it(`props: "all" returns "natural keys" & string props`, () => {
                const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: true,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
              })
              it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
                const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
              })
              it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
                const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
              })
              it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
                const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
              })
            })
            describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
                const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsAllSymbolTrue,
                    (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])

                const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                    (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | TexpectedInspectableNested_keys
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
                const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_All,
                    (
                      | TexpectedInspectableNested_keys
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_All, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
              it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
              })
              it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
              })
            })
          })
        })
        describe(`# Function - Arrow #R10-#R12`, () => {
          const inputTitle = `Function - a_Function_arrowNamed` // just for title
          const a_Function_arrowNamed = () => 1
          const a_Function_arrowNamed2 = () => 2
          const getInputVanilla = () => a_Function_arrowNamed // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
          const getInputWithExtraCommonProps = () => add_CommonProps(a_Function_arrowNamed2) // like above, WECP

          // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
          const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
          type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
          const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

          type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
          type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
          const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
          const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

          // prototype / base-type props
          type Texpected_stringNonEnumerablesOwn = string
          const expected_stringNonEnumerablesOwn = function_prototype_stringNonEnumerablesOwn
          type Texpected_symbolNonEnumerablesOwn = symbol
          const expected_symbolNonEnumerablesOwn = []
          type Texpected_stringNonEnumerablesInherited = string
          const expected_stringNonEnumerablesInherited = [...function_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? function_prototype_stringNonEnumerablesInherited_ES2023 : [])]
          type Texpected_symbolNonEnumerablesInherited = symbol
          const expected_symbolNonEnumerablesInherited = function_prototype_symbolNonEnumerablesInherited

          describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
            describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
              it(`keys_NoOptions`, () => {
                const keys_NoOptions = keysS(getInputVanilla())
                expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
                expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_EmptyOptions`, () => {
                const keys_EmptyOptions = keysS(getInputVanilla(), {})
                expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
                expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions literal`, () => {
                const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                  enumerables: true,
                  own: true,
                  strict: false,
                  inherited: false,
                  top: false,
                  nonEnumerables: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
                expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions untyped`, () => {
                const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
                expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions TYPED`, () => {
                const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
                expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
                const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                  ...noPropsKeysOptionsUntyped,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
                expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
                const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                  ...noPropsKeysOptionsUntyped,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
                expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_WrongAnyOptions`, () => {
                const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

                expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
                expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsFalse`, () => {
                const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
                expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
                expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsFalseStringSymbols`, () => {
                const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                  props: false,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
                expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsUndefined`, () => {
                const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
                expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
                expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsSymbolIgnored`, () => {
                const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
                expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
                expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsSymbolFalseIgnored`, () => {
                const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
                expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsStringIgnored`, () => {
                const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
                expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
                expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsStringFalseIgnored`, () => {
                const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                  string: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys all filters true, except props - returns NestedKeys`, () => {
                const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                  props: false,
                  string: true,
                  symbol: true,
                  inherited: true,
                  nonEnumerables: true,
                  enumerables: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsFalseStringSymbols,
                    typeof isInspectableNested extends true
                      ? TexpectedInspectableNested_keys[]
                      : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                  >
                >(true)
                equalSetDeep(
                  keys_PropsFalseStringSymbols,
                  isInspectableNested
                    ? expectedInspectableNested_keys
                    : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
                )
              })
            })
            describe(`props: true - returns string[]`, () => {
              it(`props: true - returns string[]`, () => {
                const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
                expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
                expect(keys_PropsTrue).to.deep.equal([])
              })
              it(`props: true, symbol: true - returns string[]`, () => {
                const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
                expect(keys_PropsSymbolTrue).to.deep.equal([])
              })
              it(`props: true, string: false & symbols: true - returns string[]`, () => {
                const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
                expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
              })
              it(`props: true, string: false & symbols: false - returns string[]`, () => {
                const keys_PropsNever = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
                expect(keys_PropsNever).to.deep.equal([])

                const keys_PropsNever2 = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
                expect(keys_PropsNever2).to.deep.equal([])
              })
            })
            describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
              it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
                const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

                const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

                const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
                equalSetDeep(keys_PropsNonEnumerablesFalse, [])
              })
              it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsNonEnumerablesUndefinedDefault,
                    (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                  >
                >(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsNonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
            })
            describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
              it(`props: "all" - defaults`, () => {
                const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
                expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
                expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", symbol: true`, () => {
                const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", string: false, symbol: true`, () => {
                const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
                expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", string: false, symbol: false`, () => {
                const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

                const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
              })
            })
            describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
                const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

                const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

                const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
              })
              it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_AllNonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | TexpectedInspectableNested_keys
                    )[]
                  >
                >(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expectedInspectableNested_keys,
                ])
              })
              it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_AllNonEnumerablesUndefinedDefault,
                    (
                      | TexpectedInspectableNested_keys
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
            })
          })
          describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
            describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
              it(`no options - defaults`, () => {
                const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
                expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`empty options - defaults`, () => {
                const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
                expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`all irrelevant options, if props: false | undefined`, () => {
                const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                    typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                    // string[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
                const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                  foo: 'bar',
                } as any)

                expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`props: false | undefined & others default`, () => {
                const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

                const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                  props: undefined,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
                const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

                const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  symbol: true,
                })
                expectType<
                  TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
                >(true)
                equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
            })
            describe('props: true - simple - returns own & enumerable props only', () => {
              it(`props: true - returns string props only`, () => {
                const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
              })
              it(`props: true, symbol: true - returns string & symbol props`, () => {
                const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
                const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
              })
              it(`props: true, string: false, symbol: false - returns string[]`, () => {
                const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

                const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
              })
            })
            describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
                const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<
                  TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
                >(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                    (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
                const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_All,
                    (
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_All, [
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
              it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
              })
              it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
              })
              it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  symbol: true,
                  nonEnumerables: false,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [])
              })
            })
            describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
              it(`props: "all" returns "natural keys" & string props`, () => {
                const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: true,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
              })
              it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
                const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
              })
              it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
                const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
              })
              it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
                const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
              })
            })
            describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
                const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsAllSymbolTrue,
                    (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])

                const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                    (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | TexpectedInspectableNested_keys
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
                const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_All,
                    (
                      | TexpectedInspectableNested_keys
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_All, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
              it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
              })
              it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
              })
            })
          })
        })
        describe(`# Async Function normal #R10-#R12`, () => {
          const inputTitle = `Async Function - normal named/unnamed function` // just for title
          const getInputVanilla = () => async function named() {} // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
          const getInputWithExtraCommonProps = () => add_CommonProps(async function named2() {}) // like above, WECP

          // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
          const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
          type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
          const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

          type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
          type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
          const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
          const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

          // prototype / base-type props
          type Texpected_stringNonEnumerablesOwn = string
          const expected_stringNonEnumerablesOwn = [...function_prototype_stringNonEnumerablesOwn]
          type Texpected_symbolNonEnumerablesOwn = symbol
          const expected_symbolNonEnumerablesOwn = []
          type Texpected_stringNonEnumerablesInherited = string
          const expected_stringNonEnumerablesInherited = [...function_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? function_prototype_stringNonEnumerablesInherited_ES2023 : [])]
          type Texpected_symbolNonEnumerablesInherited = symbol | typeof Symbol.toStringTag
          const expected_symbolNonEnumerablesInherited = [...function_prototype_symbolNonEnumerablesInherited, Symbol.toStringTag]

          describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
            describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
              it(`keys_NoOptions`, () => {
                const keys_NoOptions = keysS(getInputVanilla())
                expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
                expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_EmptyOptions`, () => {
                const keys_EmptyOptions = keysS(getInputVanilla(), {})
                expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
                expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions literal`, () => {
                const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                  enumerables: true,
                  own: true,
                  strict: false,
                  inherited: false,
                  top: false,
                  nonEnumerables: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
                expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions untyped`, () => {
                const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
                expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions TYPED`, () => {
                const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
                expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
                const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                  ...noPropsKeysOptionsUntyped,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
                expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
                const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                  ...noPropsKeysOptionsUntyped,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
                expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_WrongAnyOptions`, () => {
                const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

                expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
                expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsFalse`, () => {
                const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
                expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
                expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsFalseStringSymbols`, () => {
                const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                  props: false,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
                expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsUndefined`, () => {
                const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
                expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
                expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsSymbolIgnored`, () => {
                const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
                expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
                expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsSymbolFalseIgnored`, () => {
                const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
                expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsStringIgnored`, () => {
                const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
                expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
                expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsStringFalseIgnored`, () => {
                const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                  string: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys all filters true, except props - returns NestedKeys`, () => {
                const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                  props: false,
                  string: true,
                  symbol: true,
                  inherited: true,
                  nonEnumerables: true,
                  enumerables: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsFalseStringSymbols,
                    typeof isInspectableNested extends true
                      ? TexpectedInspectableNested_keys[]
                      : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                  >
                >(true)
                equalSetDeep(
                  keys_PropsFalseStringSymbols,
                  isInspectableNested
                    ? expectedInspectableNested_keys
                    : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
                )
              })
            })
            describe(`props: true - returns string[]`, () => {
              it(`props: true - returns string[]`, () => {
                const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
                expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
                expect(keys_PropsTrue).to.deep.equal([])
              })
              it(`props: true, symbol: true - returns string[]`, () => {
                const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
                expect(keys_PropsSymbolTrue).to.deep.equal([])
              })
              it(`props: true, string: false & symbols: true - returns string[]`, () => {
                const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
                expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
              })
              it(`props: true, string: false & symbols: false - returns string[]`, () => {
                const keys_PropsNever = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
                expect(keys_PropsNever).to.deep.equal([])

                const keys_PropsNever2 = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
                expect(keys_PropsNever2).to.deep.equal([])
              })
            })
            describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
              it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
                const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

                const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

                const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
                equalSetDeep(keys_PropsNonEnumerablesFalse, [])
              })
              it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsNonEnumerablesUndefinedDefault,
                    (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                  >
                >(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsNonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
            })
            describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
              it(`props: "all" - defaults`, () => {
                const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
                expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
                expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", symbol: true`, () => {
                const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", string: false, symbol: true`, () => {
                const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
                expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", string: false, symbol: false`, () => {
                const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

                const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
              })
            })
            describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
                const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

                const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

                const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
              })
              it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_AllNonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | TexpectedInspectableNested_keys
                    )[]
                  >
                >(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expectedInspectableNested_keys,
                ])
              })
              it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_AllNonEnumerablesUndefinedDefault,
                    (
                      | TexpectedInspectableNested_keys
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
            })
          })
          describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
            describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
              it(`no options - defaults`, () => {
                const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
                expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`empty options - defaults`, () => {
                const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
                expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`all irrelevant options, if props: false | undefined`, () => {
                const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                    typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                    // string[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
                const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                  foo: 'bar',
                } as any)

                expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`props: false | undefined & others default`, () => {
                const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

                const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                  props: undefined,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
                const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

                const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  symbol: true,
                })
                expectType<
                  TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
                >(true)
                equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
            })
            describe('props: true - simple - returns own & enumerable props only', () => {
              it(`props: true - returns string props only`, () => {
                const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
              })
              it(`props: true, symbol: true - returns string & symbol props`, () => {
                const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
                const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
              })
              it(`props: true, string: false, symbol: false - returns string[]`, () => {
                const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

                const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
              })
            })
            describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
                const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<
                  TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
                >(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                    (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
                const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_All,
                    (
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_All, [
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
              it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
              })
              it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
              })
              it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  symbol: true,
                  nonEnumerables: false,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [])
              })
            })
            describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
              it(`props: "all" returns "natural keys" & string props`, () => {
                const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: true,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
              })
              it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
                const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
              })
              it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
                const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
              })
              it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
                const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
              })
            })
            describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
                const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsAllSymbolTrue,
                    (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])

                const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                    (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | TexpectedInspectableNested_keys
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
                const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_All,
                    (
                      | TexpectedInspectableNested_keys
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_All, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
              it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
              })
              it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
              })
            })
          })
        })
        describe(`# Async Arrow Function #R10-#R12`, () => {
          const inputTitle = `Async Arrow Function` // just for title
          const getInputVanilla = () => async () => {} // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
          const getInputWithExtraCommonProps = () => add_CommonProps(async () => {}) // like above, WECP

          // **NestedKeys** are items nested inside the value, separate from their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
          const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
          type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : number // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
          const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

          type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
          type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
          const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = commonStringProps // set to `commonStringProps`, or something else
          const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = commonSymbolProps // set to `commonSymbolProps`, or something else

          // prototype / base-type props
          type Texpected_stringNonEnumerablesOwn = string
          const expected_stringNonEnumerablesOwn = [...function_prototype_stringNonEnumerablesOwn]
          type Texpected_symbolNonEnumerablesOwn = symbol
          const expected_symbolNonEnumerablesOwn = []
          type Texpected_stringNonEnumerablesInherited = string
          const expected_stringNonEnumerablesInherited = [...function_prototype_stringNonEnumerablesInherited, ...(([] as any).findLastIndex ? function_prototype_stringNonEnumerablesInherited_ES2023 : [])]
          type Texpected_symbolNonEnumerablesInherited = symbol | typeof Symbol.toStringTag
          const expected_symbolNonEnumerablesInherited = [...function_prototype_symbolNonEnumerablesInherited, Symbol.toStringTag]

          describe(`${inputTitle} Vanilla, natural keys only, without extra props #R10-follows-requested`, () => {
            describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys or inherited props otherwise', () => {
              it(`keys_NoOptions`, () => {
                const keys_NoOptions = keysS(getInputVanilla())
                expectType<TypeEqual<typeof keys_NoOptions, string[]>>(true)
                expect(keys_NoOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_EmptyOptions`, () => {
                const keys_EmptyOptions = keysS(getInputVanilla(), {})
                expectType<TypeEqual<typeof keys_EmptyOptions, string[]>>(true)
                expect(keys_EmptyOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions literal`, () => {
                const keys_NoPropsKeysOptions = keysS(getInputVanilla(), {
                  enumerables: true,
                  own: true,
                  strict: false,
                  inherited: false,
                  top: false,
                  nonEnumerables: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
                expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions untyped`, () => {
                const keys_NoPropsKeysOptions = keysS(getInputVanilla(), noPropsKeysOptionsUntyped)
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions, string[]>>(true)
                expect(keys_NoPropsKeysOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsKeysOptions TYPED`, () => {
                const keys_NoPropsKeysOptions_typed = keysS(getInputVanilla(), noPropsKeysOptionsTyped)
                expectType<TypeEqual<typeof keys_NoPropsKeysOptions_typed, string[]>>(true)
                expect(keys_NoPropsKeysOptions_typed).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsOptionsStringTrueIgnored`, () => {
                const keys_NoPropsOptionsStringTrueIgnored = keysS(getInputVanilla(), {
                  ...noPropsKeysOptionsUntyped,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_NoPropsOptionsStringTrueIgnored, string[]>>(true)
                expect(keys_NoPropsOptionsStringTrueIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsOptionsStringFalseIgnored`, () => {
                const keys_NoPropsOptionsStringFalseIgnored = keysS(getInputVanilla(), {
                  ...noPropsKeysOptionsUntyped,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsOptionsStringFalseIgnored, never[]>>(true)
                expect(keys_NoPropsOptionsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_WrongAnyOptions`, () => {
                const keys_WrongAnyOptions = keysS(getInputVanilla(), { foo: 'bar' } as any)

                expectType<TypeEqual<typeof keys_WrongAnyOptions, string[]>>(true)
                expect(keys_WrongAnyOptions).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsFalse`, () => {
                const keys_PropsFalse = keysS(getInputVanilla(), { props: false })
                expectType<TypeEqual<typeof keys_PropsFalse, string[]>>(true)
                expect(keys_PropsFalse).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsFalseStringSymbols`, () => {
                const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                  props: false,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsFalseStringSymbols, symbol[]>>(true)
                expect(keys_PropsFalseStringSymbols).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_PropsUndefined`, () => {
                const keys_PropsUndefined = keysS(getInputVanilla(), { props: undefined })
                expectType<TypeEqual<typeof keys_PropsUndefined, string[]>>(true)
                expect(keys_PropsUndefined).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsSymbolIgnored`, () => {
                const keys_NoPropsSymbolIgnored = keysS(getInputVanilla(), { symbol: true })
                expectType<TypeEqual<typeof keys_NoPropsSymbolIgnored, (symbol | string)[]>>(true)
                expect(keys_NoPropsSymbolIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsSymbolFalseIgnored`, () => {
                const keys_NoPropsSymbolFalseIgnored = keysS(getInputVanilla(), {
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsSymbolFalseIgnored, string[]>>(true)
                expect(keys_NoPropsSymbolFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsStringIgnored`, () => {
                const keys_NoPropsStringIgnored = keysS(getInputVanilla(), { string: true })
                expectType<TypeEqual<typeof keys_NoPropsStringIgnored, string[]>>(true)
                expect(keys_NoPropsStringIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys_NoPropsStringFalseIgnored`, () => {
                const keys_NoPropsStringFalseIgnored = keysS(getInputVanilla(), {
                  string: false,
                })
                expectType<TypeEqual<typeof keys_NoPropsStringFalseIgnored, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_NoPropsStringFalseIgnored).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`keys all filters true, except props - returns NestedKeys`, () => {
                const keys_PropsFalseStringSymbols = keysS(getInputVanilla(), {
                  props: false,
                  string: true,
                  symbol: true,
                  inherited: true,
                  nonEnumerables: true,
                  enumerables: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsFalseStringSymbols,
                    typeof isInspectableNested extends true
                      ? TexpectedInspectableNested_keys[]
                      : (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                  >
                >(true)
                equalSetDeep(
                  keys_PropsFalseStringSymbols,
                  isInspectableNested
                    ? expectedInspectableNested_keys
                    : [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited]
                )
              })
            })
            describe(`props: true - returns string[]`, () => {
              it(`props: true - returns string[]`, () => {
                const keys_PropsTrue = keysS(getInputVanilla(), { props: true })
                expectType<TypeEqual<typeof keys_PropsTrue, string[]>>(true)
                expect(keys_PropsTrue).to.deep.equal([])
              })
              it(`props: true, symbol: true - returns string[]`, () => {
                const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue, (string | symbol)[]>>(true)
                expect(keys_PropsSymbolTrue).to.deep.equal([])
              })
              it(`props: true, string: false & symbols: true - returns string[]`, () => {
                const keys_PropsNoStringsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_PropsNoStringsSymbolTrue, symbol[]>>(true)
                expect(keys_PropsNoStringsSymbolTrue).to.deep.equal([])
              })
              it(`props: true, string: false & symbols: false - returns string[]`, () => {
                const keys_PropsNever = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_PropsNever, never[]>>(true)
                expect(keys_PropsNever).to.deep.equal([])

                const keys_PropsNever2 = keysS(getInputVanilla(), {
                  props: true,
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_PropsNever2, never[]>>(true)
                expect(keys_PropsNever2).to.deep.equal([])
              })
            })
            describe(`props: true - nonEnumerables, inherited & own - returns requested props only`, () => {
              it(`symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props??`, () => {
                const keys_PropsSymbolTrue = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

                const keys_PropsSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<TypeEqual<typeof keys_PropsSymbolTrue_inheritedFalse, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_PropsNonEnumerablesUndefinedDefault, (string | symbol)[]>>(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [])

                const keys_PropsNonEnumerablesFalse = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_PropsNonEnumerablesFalse, (string | symbol)[]>>(true)
                equalSetDeep(keys_PropsNonEnumerablesFalse, [])
              })
              it(`props: true & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsNonEnumerablesUndefinedDefault,
                    (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]
                  >
                >(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: true & symbol: true, nonEnumerables: true, inherited: true & top - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
                const keys_PropsNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_PropsNonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_PropsNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
            })
            describe('props: "all" - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
              it(`props: "all" - defaults`, () => {
                const keys_AllDefault = keysS(getInputVanilla(), { props: 'all' })
                expectType<TypeEqual<typeof keys_AllDefault, (TexpectedInspectableNested_keys | string)[]>>(true)
                expect(keys_AllDefault).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", symbol: true`, () => {
                const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                expect(keys_AllSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", string: false, symbol: true`, () => {
                const keys_AllNoStringsSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | symbol)[]>>(true)
                expect(keys_AllNoStringsSymbolTrue).to.deep.equal(expectedInspectableNested_keys)
              })
              it(`props: "all", string: false, symbol: false`, () => {
                const keys_AllNoStringsNoSymbols = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_AllNoStringsNoSymbols).to.deep.equal(expectedInspectableNested_keys)

                const keys_AllNoStringsNoSymbols2 = keysS(getInputVanilla(), {
                  props: 'all',
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_AllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
                expect(keys_AllNoStringsNoSymbols2).to.deep.equal(expectedInspectableNested_keys)
              })
            })
            describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length'`, () => {
                const keys_AllSymbolTrue = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_AllSymbolTrue, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])

                const keys_AllSymbolTrue_inheritedFalse = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<TypeEqual<typeof keys_AllSymbolTrue_inheritedFalse, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn)[]>>(true)
                equalSetDeep(keys_AllSymbolTrue_inheritedFalse, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_AllNonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys])

                const keys_AllNonEnumerablesFalse = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_AllNonEnumerablesFalse, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_AllNonEnumerablesFalse, [...expectedInspectableNested_keys])
              })
              it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_AllNonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | TexpectedInspectableNested_keys
                    )[]
                  >
                >(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expectedInspectableNested_keys,
                ])
              })
              it(`props: 'all' & symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props & top`, () => {
                const keys_AllNonEnumerablesUndefinedDefault = keysS(getInputVanilla(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_AllNonEnumerablesUndefinedDefault,
                    (
                      | TexpectedInspectableNested_keys
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_AllNonEnumerablesUndefinedDefault, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
            })
          })
          describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
            describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
              it(`no options - defaults`, () => {
                const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
                expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`empty options - defaults`, () => {
                const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
                expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`all irrelevant options, if props: false | undefined`, () => {
                const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                    typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                    // string[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
                const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
                  foo: 'bar',
                } as any)

                expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`props: false | undefined & others default`, () => {
                const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

                const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
                  props: undefined,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
              it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
                const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

                const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  symbol: true,
                })
                expectType<
                  TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
                >(true)
                equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
                  props: false,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
              })
            })
            describe('props: true - simple - returns own & enumerable props only', () => {
              it(`props: true - returns string props only`, () => {
                const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
              })
              it(`props: true, symbol: true - returns string & symbol props`, () => {
                const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
                const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
                equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
              })
              it(`props: true, string: false, symbol: false - returns string[]`, () => {
                const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

                const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
              })
            })
            describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
                const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<
                  TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
                >(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                    (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
                const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_All,
                    (
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_All, [
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
              it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
              })
              it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
              })
              it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: true,
                  symbol: true,
                  nonEnumerables: false,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [])
              })
            })
            describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
              it(`props: "all" returns "natural keys" & string props`, () => {
                const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: true,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
              })
              it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
                const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  string: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
              })
              it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
                const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                  symbol: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
              })
              it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
                const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

                const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  string: false,
                  symbol: false,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
                equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
              })
            })
            describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
              it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
                const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  // inherited: false // default
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsAllSymbolTrue,
                    (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])

                const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: false, // explicit
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                    (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                ])
              })
              it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  // nonEnumerables: false, // default
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

                const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false, // explicit
                  inherited: true,
                  top: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
              })
              it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
                const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })

                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                    (
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | TexpectedInspectableNested_keys
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                ])
              })
              it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
                const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                  top: true,
                })
                expectType<
                  TypeEqual<
                    typeof keys_valueWithProps_All,
                    (
                      | TexpectedInspectableNested_keys
                      | Texpected_stringOwnProps
                      | Texpected_symbolOwnProps
                      | Texpected_stringNonEnumerablesOwn
                      | Texpected_symbolNonEnumerablesOwn
                      | Texpected_stringNonEnumerablesInherited
                      | Texpected_symbolNonEnumerablesInherited
                      | Texpected_stringNonEnumerablesInheritedTop
                    )[]
                  >
                >(true)
                equalSetDeep(keys_valueWithProps_All, [
                  ...expectedInspectableNested_keys,
                  ...expected_stringOwnProps,
                  ...expected_symbolOwnProps,
                  ...expected_stringNonEnumerablesOwn,
                  ...expected_symbolNonEnumerablesOwn,
                  ...expected_stringNonEnumerablesInherited,
                  ...expected_symbolNonEnumerablesInherited,
                  ...expected_stringNonEnumerablesInheritedTop,
                ])
              })
              it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: 'all',
                  symbol: true,
                  nonEnumerables: true,
                  inherited: true,
                })
                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
              })
              it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
                const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
                  own: false,
                  props: 'all',
                  symbol: true,
                  nonEnumerables: false,
                  inherited: true,
                })

                expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | string | symbol)[]>>(true)
                equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
              })
            })
          })
        })
      })
    })
  })
  describe('# any & unknown inputs', () => {
    const expected_stringNonEnumerablesInheritedTop = [] // override for primitives, we have no props
    type Texpected_stringNonEnumerablesInheritedTop = never

    describe('# any value # R12.any', () => {
      const inputTitle = `any value` // just for title
      const getInputWithExtraCommonProps = () => null as any // like above, WECP

      // **NestedKeys** are items nested inside the value, separate from  their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
      const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
      type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : never // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
      const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

      type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
      type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
      const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = [] // set to `commonStringProps`, or something else
      const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = [] // set to `commonSymbolProps`, or something else

      // prototype / base-type props
      type Texpected_stringNonEnumerablesOwn = string
      const expected_stringNonEnumerablesOwn = []
      type Texpected_symbolNonEnumerablesOwn = symbol
      const expected_symbolNonEnumerablesOwn = []
      type Texpected_stringNonEnumerablesInherited = string
      const expected_stringNonEnumerablesInherited = []
      type Texpected_symbolNonEnumerablesInherited = symbol
      const expected_symbolNonEnumerablesInherited = []

      describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
        describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
          it(`no options - defaults`, () => {
            const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
            expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
          it(`empty options - defaults`, () => {
            const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
            expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
          it(`all irrelevant options, if props: false | undefined`, () => {
            const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                // string[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
          it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
            const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
              foo: 'bar',
            } as any)

            expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
          it(`props: false | undefined & others default`, () => {
            const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
              props: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

            const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
              props: undefined,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
          it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
            const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
              props: false,
              string: false,
              symbol: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

            const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
              props: false,
              symbol: true,
            })
            expectType<
              TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
            >(true)
            equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

            const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
              props: false,
              string: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
        })
        describe('props: true - simple - returns own & enumerable props only', () => {
          it(`props: true - returns string props only`, () => {
            const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
              props: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
          })
          it(`props: true, symbol: true - returns string & symbol props`, () => {
            const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
          })
          it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
            const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
              props: true,
              string: false,
              symbol: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
          })
          it(`props: true, string: false, symbol: false - returns string[]`, () => {
            const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
              props: true,
              string: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

            const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
              props: true,
              string: false,
              symbol: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
          })
        })
        describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
          it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
            const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: true,
              // inherited: false // default
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
              true
            )
            equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

            const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: true,
              inherited: false, // explicit
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
          })
          it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
            const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: false, // default
              inherited: true,
              top: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

            const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: false, // explicit
              inherited: true,
              top: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
          })
          it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
            const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: true,
              inherited: true,
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                (
                  | Texpected_stringOwnProps
                  | Texpected_symbolOwnProps
                  | Texpected_stringNonEnumerablesOwn
                  | Texpected_symbolNonEnumerablesOwn
                  | Texpected_stringNonEnumerablesInherited
                  | Texpected_symbolNonEnumerablesInherited
                )[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringNonEnumerablesInherited,
              ...expected_symbolNonEnumerablesInherited,
            ])
          })
          it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
            const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: true,
              inherited: true,
              top: true,
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_All,
                (
                  | Texpected_stringOwnProps
                  | Texpected_symbolOwnProps
                  | Texpected_stringNonEnumerablesOwn
                  | Texpected_symbolNonEnumerablesOwn
                  | Texpected_stringNonEnumerablesInherited
                  | Texpected_symbolNonEnumerablesInherited
                  | Texpected_stringNonEnumerablesInheritedTop
                )[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_All, [
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringNonEnumerablesInherited,
              ...expected_symbolNonEnumerablesInherited,
              ...expected_stringNonEnumerablesInheritedTop,
            ])
          })
          it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
            const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
              own: false,
              props: true,
              nonEnumerables: true,
              inherited: true,
            })

            expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
            equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
          })
          it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
            const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
              own: false,
              props: true,
              symbol: true,
              nonEnumerables: true,
              inherited: true,
            })

            expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
            equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
          })
          it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
            const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
              own: false,
              props: true,
              symbol: true,
              nonEnumerables: false,
              inherited: true,
            })

            expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
            equalSetDeep(keys_valueWithProps_NotOwn, [])
          })
        })
        describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
          it(`props: "all" returns "natural keys" & string props`, () => {
            const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

            const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              string: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

            const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              string: true,
              symbol: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
          })
          it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
            const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

            const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              string: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
          })
          it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
            const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              string: false,
              symbol: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
          })
          it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
            const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              string: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

            const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              string: false,
              symbol: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
          })
        })
        describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
          it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
            const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              nonEnumerables: true,
              // inherited: false // default
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_PropsAllSymbolTrue,
                (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
              ...expectedInspectableNested_keys,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
            ])

            const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              nonEnumerables: true,
              inherited: false, // explicit
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
              ...expectedInspectableNested_keys,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
            ])
          })
          it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
            const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              // nonEnumerables: false, // default
              inherited: true,
              top: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

            const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              nonEnumerables: false, // explicit
              inherited: true,
              top: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
          })
          it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
            const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              nonEnumerables: true,
              inherited: true,
            })

            expectType<
              TypeEqual<
                typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                (
                  | Texpected_stringNonEnumerablesOwn
                  | Texpected_symbolNonEnumerablesOwn
                  | TexpectedInspectableNested_keys
                  | Texpected_stringOwnProps
                  | Texpected_symbolOwnProps
                  | Texpected_stringNonEnumerablesInherited
                  | Texpected_symbolNonEnumerablesInherited
                )[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
              ...expectedInspectableNested_keys,
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringNonEnumerablesInherited,
              ...expected_symbolNonEnumerablesInherited,
            ])
          })
          it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
            const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              nonEnumerables: true,
              inherited: true,
              top: true,
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_All,
                (
                  | TexpectedInspectableNested_keys
                  | Texpected_stringOwnProps
                  | Texpected_symbolOwnProps
                  | Texpected_stringNonEnumerablesOwn
                  | Texpected_symbolNonEnumerablesOwn
                  | Texpected_stringNonEnumerablesInherited
                  | Texpected_symbolNonEnumerablesInherited
                  | Texpected_stringNonEnumerablesInheritedTop
                )[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_All, [
              ...expectedInspectableNested_keys,
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringNonEnumerablesInherited,
              ...expected_symbolNonEnumerablesInherited,
              ...expected_stringNonEnumerablesInheritedTop,
            ])
          })
          it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
            const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
              own: false,
              props: 'all',
              symbol: true,
              nonEnumerables: true,
              inherited: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
            equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
          })
          it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
            const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
              own: false,
              props: 'all',
              symbol: true,
              nonEnumerables: false,
              inherited: true,
            })

            expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
            equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
          })
        })
      })
    })
    describe('# unknown value # R12.unknown', () => {
      const inputTitle = `unknown value` // just for title
      const getInputVanilla = () => null as unknown // set to the "value" under test, eg `a_Array_of_Tvalues`, `aSetOfValues`, `a_Map_of_TMapKeys_Tvalues`, `aPojso`, `instance` etc
      const getInputWithExtraCommonProps = () => null as unknown // like above, WECP

      // **NestedKeys** are items nested inside the value, separate from  their props/values. For example Array has **indexes** against elements (values), Maps have **keys** against value pairs and so on. All Objects in JS also have props, which can be separate from NestedKeys (eg in Set). All POJSO/instances (including Set & Map Iterators or normal Iterators/Generators), don't have NestedKeys, so only their props are the keys (therefore set this to `never` for these ones)!
      const isInspectableNested = false // Map, Set, Array etc have NestedKeys that can be iterated, without affecting value - set this to `true`. On the other hand `Set.entries()`, `Map.entries()` and other Iterators/Generators can't get iterated to inspect their keys (since they can't be restarted), so their NestedKeys do not exist. For these, along with POJSO/instances, Singles etc, set this to `false`.
      type TexpectedInspectableNested_keys = typeof isInspectableNested extends false ? never : never // if isInspectableNested is true, set the actual NestedKeys type, eg `number` for Array indexes, or Map/Set actual keys (without the array bit). If false, set to never.
      const expectedInspectableNested_keys: TexpectedInspectableNested_keys[] = !isInspectableNested ? [] : [] // An array of the actual natural keys of the value, eg for indexes [0,1,2,3], or Map/Set actual keys used. Leave as empty array, if `!isInspectableNested`

      type Texpected_stringOwnProps = string // set to TcommonStringProps, or change to `TarrayAndCommonStringProps` eg for arrays with extra prop `-10` or something else
      type Texpected_symbolOwnProps = symbol // set to TcommonSymbolProps, or change to other
      const expected_stringOwnProps: Readonly<Texpected_stringOwnProps[]> = [] // set to `commonStringProps`, or something else
      const expected_symbolOwnProps: Readonly<Texpected_symbolOwnProps[]> = [] // set to `commonSymbolProps`, or something else

      // prototype / base-type props
      type Texpected_stringNonEnumerablesOwn = string
      const expected_stringNonEnumerablesOwn = []
      type Texpected_symbolNonEnumerablesOwn = symbol
      const expected_symbolNonEnumerablesOwn = []
      type Texpected_stringNonEnumerablesInherited = string
      const expected_stringNonEnumerablesInherited = []
      type Texpected_symbolNonEnumerablesInherited = symbol
      const expected_symbolNonEnumerablesInherited = []

      describe(`${inputTitle} WECP (With Extra Common Props) #R12`, () => {
        describe('props: false / undefined (default) - returns "natural keys", i.e number[] indexes or Set/Map keys', () => {
          it(`no options - defaults`, () => {
            const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps())
            expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
          it(`empty options - defaults`, () => {
            const keys_valueWithProps_NoOptions = keysS(getInputWithExtraCommonProps(), {})
            expectType<TypeEqual<typeof keys_valueWithProps_NoOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_NoOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
          it(`all irrelevant options, if props: false | undefined`, () => {
            const keys_valueWithProps_NoPropsIrrelevantOptions = keysS(getInputWithExtraCommonProps(), noPropsKeysOptionsUntyped)
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_NoPropsIrrelevantOptions,
                typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]
                // string[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_NoPropsIrrelevantOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
          it(`wrong options with as any - we should get defaults (props or Inspectabke Nested Keys)`, () => {
            const keys_valueWithProps_WrongAnyOptions = keysS(getInputWithExtraCommonProps(), {
              foo: 'bar',
            } as any)

            expectType<TypeEqual<typeof keys_valueWithProps_WrongAnyOptions, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_WrongAnyOptions, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
          it(`props: false | undefined & others default`, () => {
            const keys_valueWithProps_PropsFalse = keysS(getInputWithExtraCommonProps(), {
              props: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsFalse, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsFalse, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)

            const keys_valueWithProps_PropsUndefined = keysS(getInputWithExtraCommonProps(), {
              props: undefined,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsUndefined, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsUndefined, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
          it(`various others: {props: false}, {symbol: true}, {symbol: false}, {string: true}, {string: false}`, () => {
            const keys_valueWithProps_PropsFalseStringSymbols = keysS(getInputWithExtraCommonProps(), {
              props: false,
              string: false,
              symbol: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseStringSymbols, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_symbolOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsFalseStringSymbols, isInspectableNested ? expectedInspectableNested_keys : expected_symbolOwnProps)

            const keys_valueWithProps_PropsFalseSymbol = keysS(getInputWithExtraCommonProps(), {
              props: false,
              symbol: true,
            })
            expectType<
              TypeEqual<typeof keys_valueWithProps_PropsFalseSymbol, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>
            >(true)
            equalSetDeep(keys_valueWithProps_PropsFalseSymbol, isInspectableNested ? expectedInspectableNested_keys : [...expected_stringOwnProps, ...expected_symbolOwnProps])

            const keys_valueWithProps_PropsFalseString = keysS(getInputWithExtraCommonProps(), {
              props: false,
              string: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsFalseString, typeof isInspectableNested extends true ? TexpectedInspectableNested_keys[] : Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsFalseString, isInspectableNested ? expectedInspectableNested_keys : expected_stringOwnProps)
          })
        })
        describe('props: true - simple - returns own & enumerable props only', () => {
          it(`props: true - returns string props only`, () => {
            const keys_valueWithProps_PropsTrue = keysS(getInputWithExtraCommonProps(), {
              props: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsTrue, Texpected_stringOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsTrue, expected_stringOwnProps)
          })
          it(`props: true, symbol: true - returns string & symbol props`, () => {
            const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps])
          })
          it(`props: true, string: false, symbol: true - returns only symbol props`, () => {
            const keys_valueWithProps_NoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
              props: true,
              string: false,
              symbol: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_NoStringsSymbolTrue, Texpected_symbolOwnProps[]>>(true)
            equalSetDeep(keys_valueWithProps_NoStringsSymbolTrue, expected_symbolOwnProps)
          })
          it(`props: true, string: false, symbol: false - returns string[]`, () => {
            const keys_valueWithProps_PropsStringFalse = keysS(getInputWithExtraCommonProps(), {
              props: true,
              string: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalse, never[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsStringFalse, [])

            const keys_valueWithProps_PropsStringFalseSymbolFalse = keysS(getInputWithExtraCommonProps(), {
              props: true,
              string: false,
              symbol: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsStringFalseSymbolFalse, never[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsStringFalseSymbolFalse, [])
          })
        })
        describe('props: true - nonEnumerables, inherited & own - returns requested props only', () => {
          it(`props: true & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
            const keys_valueWithProps_PropsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: true,
              // inherited: false // default
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsSymbolTrue, (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(
              true
            )
            equalSetDeep(keys_valueWithProps_PropsSymbolTrue, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])

            const keys_valueWithProps_PropsSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: true,
              inherited: false, // explicit
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_PropsSymbolTrue_inheritedFalse,
                (Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_PropsSymbolTrue_inheritedFalse, [...expected_stringNonEnumerablesOwn, ...expected_symbolNonEnumerablesOwn, ...expected_stringOwnProps, ...expected_symbolOwnProps])
          })
          it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
            const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: false, // default
              inherited: true,
              top: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expected_stringOwnProps, ...expected_symbolOwnProps])

            const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: false, // explicit
              inherited: true,
              top: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expected_stringOwnProps, ...expected_symbolOwnProps])
          })
          it(`symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
            const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: true,
              inherited: true,
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                (
                  | Texpected_stringOwnProps
                  | Texpected_symbolOwnProps
                  | Texpected_stringNonEnumerablesOwn
                  | Texpected_symbolNonEnumerablesOwn
                  | Texpected_stringNonEnumerablesInherited
                  | Texpected_symbolNonEnumerablesInherited
                )[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringNonEnumerablesInherited,
              ...expected_symbolNonEnumerablesInherited,
            ])
          })
          it(`props: true & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array\``, () => {
            const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
              props: true,
              symbol: true,
              nonEnumerables: true,
              inherited: true,
              top: true,
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_All,
                (
                  | Texpected_stringOwnProps
                  | Texpected_symbolOwnProps
                  | Texpected_stringNonEnumerablesOwn
                  | Texpected_symbolNonEnumerablesOwn
                  | Texpected_stringNonEnumerablesInherited
                  | Texpected_symbolNonEnumerablesInherited
                  | Texpected_stringNonEnumerablesInheritedTop
                )[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_All, [
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringNonEnumerablesInherited,
              ...expected_symbolNonEnumerablesInherited,
              ...expected_stringNonEnumerablesInheritedTop,
            ])
          })
          it(`NOT own, only inherited { own: false, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
            const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
              own: false,
              props: true,
              nonEnumerables: true,
              inherited: true,
            })

            expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, Texpected_stringNonEnumerablesInherited[]>>(true)
            equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited])
          })
          it(`NOT own, only inherited { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input`, () => {
            const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
              own: false,
              props: true,
              symbol: true,
              nonEnumerables: true,
              inherited: true,
            })

            expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
            equalSetDeep(keys_valueWithProps_NotOwn, [...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
          })
          it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
            const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
              own: false,
              props: true,
              symbol: true,
              nonEnumerables: false,
              inherited: true,
            })

            expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
            equalSetDeep(keys_valueWithProps_NotOwn, [])
          })
        })
        describe('props: "all" - simple - returns own & enumerable props AND "natural keys" (eg number[] of indexes or Set/Map keys)', () => {
          it(`props: "all" returns "natural keys" & string props`, () => {
            const keys_valueWithProps_PropsAll = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAll, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAll, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

            const keys_valueWithProps_PropsAllStringTrue = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              string: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllStringTrue, [...expected_stringOwnProps, ...expectedInspectableNested_keys])

            const keys_valueWithProps_PropsAllStringTrueSymbolFalse = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              string: true,
              symbol: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllStringTrueSymbolFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllStringTrueSymbolFalse, [...expected_stringOwnProps, ...expectedInspectableNested_keys])
          })
          it(`props: "all", symbol: true - returns "natural keys" & string & symbol props`, () => {
            const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), { props: 'all', symbol: true })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])

            const keys_valueWithProps_PropsAllSymbolTrueStringTrue = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              string: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllSymbolTrueStringTrue, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllSymbolTrueStringTrue, [...expected_stringOwnProps, ...expected_symbolOwnProps, ...expectedInspectableNested_keys])
          })
          it(`props: "all", string: false, symbol: true - returns "natural keys" & symbol props`, () => {
            const keys_valueWithProps_PropsAllNoStringsSymbolTrue = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              string: false,
              symbol: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsSymbolTrue, (TexpectedInspectableNested_keys | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllNoStringsSymbolTrue, [...expectedInspectableNested_keys, ...expected_symbolOwnProps])
          })
          it(`props: "all", string: false, symbol: false - returns "natural keys" only`, () => {
            const keys_valueWithProps_PropsAllNoStringsNoSymbols = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              string: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols, TexpectedInspectableNested_keys[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols, [...expectedInspectableNested_keys])

            const keys_valueWithProps_PropsAllNoStringsNoSymbols2 = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              string: false,
              symbol: false,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_PropsAllNoStringsNoSymbols2, TexpectedInspectableNested_keys[]>>(true)
            equalSetDeep(keys_valueWithProps_PropsAllNoStringsNoSymbols2, [...expectedInspectableNested_keys])
          })
        })
        describe('props: "all" - nonEnumerables, inherited & own - returns requested props only', () => {
          it(`props: 'all' & symbol: true, nonEnumerables: true & inherited: undefined | false - returns no base props except 'length' + Common Props (cause inherited: false)`, () => {
            const keys_valueWithProps_PropsAllSymbolTrue = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              nonEnumerables: true,
              // inherited: false // default
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_PropsAllSymbolTrue,
                (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue, [
              ...expectedInspectableNested_keys,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
            ])

            const keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              nonEnumerables: true,
              inherited: false, // explicit
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse,
                (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesOwn | Texpected_symbolNonEnumerablesOwn | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_PropsAllSymbolTrue_inheritedFalse, [
              ...expectedInspectableNested_keys,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
            ])
          })
          it(`symbol: true, nonEnumerables: false | undefined & inherited & top true - returns no extra BaseType props (cause nonEnumerables: false)`, () => {
            const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              // nonEnumerables: false, // default
              inherited: true,
              top: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesUndefinedDefault, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])

            const keys_valueWithProps_nonEnumerablesFalse = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              nonEnumerables: false, // explicit
              inherited: true,
              top: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_nonEnumerablesFalse, (TexpectedInspectableNested_keys | Texpected_stringOwnProps | Texpected_symbolOwnProps)[]>>(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesFalse, [...expectedInspectableNested_keys, ...expected_stringOwnProps, ...expected_symbolOwnProps])
          })
          it(`WECP with symbol: true, nonEnumerables: true, inherited: true - returns all keys, including base-type inherited & non-enumerables props`, () => {
            const keys_valueWithProps_nonEnumerablesUndefinedDefault = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              nonEnumerables: true,
              inherited: true,
            })

            expectType<
              TypeEqual<
                typeof keys_valueWithProps_nonEnumerablesUndefinedDefault,
                (
                  | Texpected_stringNonEnumerablesOwn
                  | Texpected_symbolNonEnumerablesOwn
                  | TexpectedInspectableNested_keys
                  | Texpected_stringOwnProps
                  | Texpected_symbolOwnProps
                  | Texpected_stringNonEnumerablesInherited
                  | Texpected_symbolNonEnumerablesInherited
                )[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_nonEnumerablesUndefinedDefault, [
              ...expectedInspectableNested_keys,
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringNonEnumerablesInherited,
              ...expected_symbolNonEnumerablesInherited,
            ])
          })
          it(`props: 'all' & everything else { symbols: true, nonEnumerables: true, inherited: true, top: true }. Returns all keys (string & symbol), including native inherited & non-enumerables props & top of Array`, () => {
            const keys_valueWithProps_All = keysS(getInputWithExtraCommonProps(), {
              props: 'all',
              symbol: true,
              nonEnumerables: true,
              inherited: true,
              top: true,
            })
            expectType<
              TypeEqual<
                typeof keys_valueWithProps_All,
                (
                  | TexpectedInspectableNested_keys
                  | Texpected_stringOwnProps
                  | Texpected_symbolOwnProps
                  | Texpected_stringNonEnumerablesOwn
                  | Texpected_symbolNonEnumerablesOwn
                  | Texpected_stringNonEnumerablesInherited
                  | Texpected_symbolNonEnumerablesInherited
                  | Texpected_stringNonEnumerablesInheritedTop
                )[]
              >
            >(true)
            equalSetDeep(keys_valueWithProps_All, [
              ...expectedInspectableNested_keys,
              ...expected_stringOwnProps,
              ...expected_symbolOwnProps,
              ...expected_stringNonEnumerablesOwn,
              ...expected_symbolNonEnumerablesOwn,
              ...expected_stringNonEnumerablesInherited,
              ...expected_symbolNonEnumerablesInherited,
              ...expected_stringNonEnumerablesInheritedTop,
            ])
          })
          it(`NOT own, only inherited nonEnumerables { own: false, symbols: true, nonEnumerables: true, inherited: true }. Returns all **but own** keys (string & symbol), including native inherited & non-enumerables props of input and also excludes TexpectedInspectableNested_keys? `, () => {
            const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
              own: false,
              props: 'all',
              symbol: true,
              nonEnumerables: true,
              inherited: true,
            })
            expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (TexpectedInspectableNested_keys | Texpected_stringNonEnumerablesInherited | Texpected_symbolNonEnumerablesInherited)[]>>(true)
            equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys, ...expected_stringNonEnumerablesInherited, ...expected_symbolNonEnumerablesInherited])
          })
          it(`Empty string[] array: NOT own, only inherited { own: false, symbols: true, nonEnumerables: false, inherited: true }. Returns empty array, because non-own are non-enumerables & non-enumerables: false!`, () => {
            const keys_valueWithProps_NotOwn = keysS(getInputWithExtraCommonProps(), {
              own: false,
              props: 'all',
              symbol: true,
              nonEnumerables: false,
              inherited: true,
            })

            expectType<TypeEqual<typeof keys_valueWithProps_NotOwn, (string | symbol)[]>>(true)
            equalSetDeep(keys_valueWithProps_NotOwn, [...expectedInspectableNested_keys])
          })
        })
      })
    })
  })

  it('# Options: extra unknown keys are accepted, wrong value types are not', () => {
    const anyValueWrongOptions1 = keysS(a_Array_of_Tvalues, { props: true, WRONG_OPTIONS: true })

    // @ts-expect-error OK
    const anyValueWrongOptions2 = keysS(a_Array_of_Tvalues, { WRONG_OPTIONS: true })

    // @ts-expect-error OK
    const anyValueWrongOptions3 = keysS(a_Array_of_Tvalues, { props: 'WRONG_OPTIONS' })
  })
})
