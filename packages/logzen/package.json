{
  "name": "@devzen/logzen",
  "version": "1.0.0-alpha.1",
  "description": "A radically powerful yet familiar Logger, with emphasis on Granularity & Context, Debugging BigApps & Observability. Outputs anywhere, colorful values, customizable Header & many more options. Extensively Typed & tested.",
  "scripts": {
    "****************** A Library Setup *****": "",

    "################# Running ": "",

    "### dev: build & test in watch, in separate Konsoles!": "",
    "fdev~": "npm run dev~",
    "dev~": "npm-run-all build && t -npr build! jest! docs! jest-docs:assert!",
    "dev:quick~": "t -npr 'build! jest:quick!",

    "   ### start covnentional": "",
    "start": "npm-run-all build test",
    "start2": "npm-run-all build test jest-docs:assert:run",

    "################# Build & Typescript": "",
    "build": "npm-run-all build:ts",
    "build:all": "npm-run-all build:ts jest-docs docs:build",

    "   ### TypeScript": "",
    "build:ts": "npx mkdirp dist && npx tsc --listEmittedFiles --project tsconfig.json",
    "build:ts:prod": "npm-run-all clean && npx mkdirp dist && npx tsc --listEmittedFiles --removeComments --project tsconfig.prod.json",

    "   ### Watching": "",
    "build:ts!": "npx mkdirp dist && npx tsc --listEmittedFiles --watch --project tsconfig.json",
    "build!": "npm-run-all --parallel build:ts! distzen!",
    "build:all!": "npm-run-all --parallel build:ts! docs! distzen!",

    "   ### Aliases": "",
    "build:docs": "npm run docs:build",
    "build:docs!": "npm run docs!",

    "################# Testing: Jest, mocha & others": "",
    "test": "npm-run-all jest jest-docs:assert jest-docs:assert:run",
    "test:ci": "npm-run-all jest:ci jest-docs:assert jest-docs:assert:run",
    "test:coverage": "npm-run-all jest:coverage",

    "         ####### Test watching & Open new Terminal Windows via neoTerm": "",
    "test!": "echo CANT RUN npm run jest! alone, cause it needs jest-docs:assert! on a separate terminal. Use npm run test~!",
    "test~": "t -npr 'jest!' jest-docs:assert!",
    "test:quick~": "npm run test~",
    "test!:noverbose~": "t -npr 'jest!:noverbose' jest-docs:assert!",

    "         ####### Other - docker testing etc": "",
    "test:all_node_versions": "./z/test-all-node-versions.sh",
    "test:node_version": "./z/test-node-version.sh",

    "         ####### Jest": "",
    "jest": "npx jest --runInBand --detectOpenHandles --verbose --forceExit",
    "jest:dist": "npx jest --roots dist --runInBand --detectOpenHandles --verbose --forceExit",
    "jest:coverage": "npx jest --coverage --runInBand --detectOpenHandles --verbose --forceExit",
    "jest:ci": "npx jest --ci --reporters=default --reporters=jest-junit --runInBand --detectOpenHandles --forceExit",
    "jest!": "npx jest --runInBand --watchAll --no-cache",
    "jest:dist!": "npx jest --roots dist --runInBand --watchAll --no-cache",
    "jest:quick!": "npm run jest!",
    "jest!:noverbose": "npx jest --runInBand --watchAll --no-cache --verbose=false",

    "         ####### Others": "",
    "benchmark": "node dist/docs/benchmark.js",

    "################# Docs": "",
    "docs:build": "npm-run-all docs:clean jest-docs:markdown typedoc",
    "docs:serve": "npx ws --port 8090 --directory ./dist/docs-html",
    "docs!": "npm-run-all --parallel jest-docs:markdown! typedoc! docs:serve",
    "docs:clean": "npx rimraf dist/docs-html",

    "jest-docs": "npm-run-all jest-docs:assert jest-docs:executable jest-docs:markdown",
    "prejest-docs:assert":"npm run jest-docs:create-dir",
    "jest-docs:assert": "ts-node src/docs/jest-docs/detailed-usage-examples.generator.spec.ts --assert > dist/docs/generated/detailed-usage-examples.assert.spec.generated.js",
    "prejest-docs:markdown":"npm run jest-docs:create-dir",
    "jest-docs:markdown": "ts-node src/docs/jest-docs/detailed-usage-examples.generator.spec.ts --markdown > readme.md",
    "prejest-docs:executable":"npm run jest-docs:create-dir",
    "jest-docs:executable": "ts-node src/docs/jest-docs/detailed-usage-examples.generator.spec.ts --executable > dist/docs/generated/detailed-usage-examples.executable.spec.generated.js",
    "jest-docs:create-dir": "npx mkdirp dist/docs/generated",

    "jest-docs:assert!": "nodemon --config nodemon.json --exec npm-run-all jest-docs:assert jest-docs:assert:run",
    "jest-docs:markdown!": "nodemon --config nodemon.json --exec npm run jest-docs:markdown",
    "jest-docs:executable!": "nodemon --config nodemon.json --exec npm-run-all jest-docs:executable jest-docs:executable:run",

    "jest-docs:assert:run": "node dist/docs/generated/detailed-usage-examples.assert.spec.generated.js",
    "jest-docs:executable:run": "node dist/docs/generated/detailed-usage-examples.executable.spec.generated.js",

    "jest-docs:all~": "t -npr jest-docs:assert! jest-docs:executable! jest-docs:markdown!",

    "         ####### TypeDoc": "",
    "typedoc": "npx typedoc",
    "typedoc!": "nodemon --config nodemon.json --watch readme.md --exec npm run typedoc",

    "################# Chores and installing": "",
    "audit": "npm audit",
    "audit:fix": "npm audit fix",
    "clean": "npx rimraf -g dist coverage .nyc_output result junit.xml ~temp tsconfig.*.tsbuildinfo && npm run clean:gen",
    "clean:docs": "npm run docs:clean",
    "clean:gen": "npx rimraf dist/docs/generated",
    "chores": "npm-run-all chore:fixInspectOptions",
    "chore:fixInspectOptions": "echo \"export const InspectOptions = util.InspectOptions;\" >> node_modules/node-inspect-extracted/index.mjs\n",
    "chore:patch-package": "npx patch-package --error-on-fail --error-on-warn",
    "distzen": "npx distzen",
    "distzen!": "npx distzen --watch",

    "################# Formatting & Linting": "",
    "format": "npm-run-all prettier lint:noFail prettier",
    "prettier": "npx prettier --write \"**/*.{ts,js,json}\"",
    "lint": "npx eslint --ignore-path .gitignore \"**/*.{js,ts}\"",
    "lint:fix": "npx eslint --fix --ignore-path .gitignore \"**/*.{js,ts}\"",
    "lint:noFail": "npx eslint --fix --ignore-path .gitignore \"**/*.{js,ts}\" || exit 0"
  },
  "localDependencies": {
    "@devzen/speczen": "../speczen",
    "@devzen/validzen": "../validzen",
    "@devzen/zendash": "../zendash"
  },
  "dependencies": {
    "@devzen/speczen": "1.0.0-alpha.1",
    "@devzen/validzen": "1.0.0-alpha.1",
    "@devzen/zendash": "1.0.0-alpha.1",
    "ansi-colors": "^4.1.3",
    "class-transformer": "^0.5.1",
    "class-transformer-validator": "^0.9.1",
    "class-validator": "^0.14.1",
    "class-validator-extended": "^3.2.0",
    "json-stringify-safe": "^5.0.1",
    "lodash": "^4.17.21",
    "node-inspect-extracted": "^3.0.0",
    "reflect-metadata": "^0.1.14",
    "test-console": "^2.0.0",
    "upath": "^2.0.1"
  },
  "devDependencies": {
    "@prettier/sync": "^0.5.1",
    "@types/jest": "^29.5.11",
    "@types/lodash": "^4.14.202",
    "@types/node": "^20.11.5",
    "@types/prettier": "^3.0.0",
    "@types/test-console": "^2.0.3",
    "@typescript-eslint/eslint-plugin": "^6.19.0",
    "@typescript-eslint/parser": "^6.19.0",
    "eslint": "^8.57.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-typescript": "^17.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^27.6.3",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-tsdoc": "^0.2.17",
    "eslint-plugin-unicorn": "^50.0.1",
    "install-local": "^3.0.1",
    "jest": "^29.7.0",
    "jest-extended": "^4.0.2",
    "jest-simple-dot-reporter": "^1.0.5",
    "jest-standard-reporter": "^2.0.0",
    "local-web-server": "^5.3.1",
    "mkdirp": "^3.0.1",
    "nodemon": "^3.1.0",
    "npm-run-all": "^4.1.5",
    "object.hasown": "^1.1.4",
    "prettier": "^3.2.5",
    "rimraf": "^5.0.5",
    "string.prototype.replaceall": "^1.0.8",
    "ts-clean-built": "^1.3.1",
    "ts-jest": "^29.1.2",
    "ts-loader": "^9.5.1",
    "ts-mockito": "^2.6.1",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "tsconfig-paths": "^4.2.0",
    "typedoc": "^0.26.7",
    "typescript": "5.6.3",
    "uglify-js": "^3.17.4"
  },
  "files": [
    "dist/"
  ],
  "engines": {
    "node": ">=14.0.0"
  },
  "types": "./dist/code/index.d.ts",
  "type": "commonjs",
  "main": "dist/code/index.js",

  "#################### Not technical meta-data": "####################",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DevZen/LogZen.git"
  },
  "bugs": {
    "url": "https://github.com/DevZen/LogZen/issues"
  },
  "homepage": "https://github.com/DevZen/LogZen",
  "author": "Angelos Pikoulas",
  "license": "MIT"
}
