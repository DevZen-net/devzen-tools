{
  "name": "@devzen/zendash",
  "version": "1.0.0-alpha.1",
  "description": "A small set of utilities around types checking, exact or like comparisons, extracting props & deep mutation of objects",
  "scripts": {
    "****************** A Library Setup *****": "",
    "################# Running ": "",
    "### dev: build & test in watch, in separate Konsoles!": "",
    "# fdev~": "npm run dev~",
    "dev~": "npm-run-all clean build && t -npr build! gen! test! docs!",
    "dev:quick~": "t -npr build! gen! test:quick!",
    "   ### start covnentional": "",
    "start": "npm-run-all gen build test",
    "################# Build & Typescript": "",
    "build": "npm-run-all build:ts",
    "build:all": "npm-run-all build:ts docs:build",
    "   ### TypeScript": "",
    "build:ts": "npx mkdirp dist && npx tsc --listEmittedFiles --project tsconfig.json",
    "build:ts:prod": "npm-run-all clean && npx mkdirp dist && npx tsc --listEmittedFiles --project tsconfig.prod.json",
    "   ### Watching": "",
    "build:ts!": "npx mkdirp dist && npx tsc --listEmittedFiles --watch --project tsconfig.json",
    "build!": "npm-run-all --parallel build:ts! distzen!",
    "build:all!": "npm-run-all --parallel build:ts! docs!",
    "   ### Aliases": "",
    "build:docs": "npm run docs:build",
    "build:docs!": "npm run docs!",
    "################# Testing ": "",
    "test": "npm-run-all mocha",
    "test:ci": "npm-run-all mocha:ci",
    "test:coverage": "npm-run-all mocha:coverage",
    "         ####### Test watching & Open new Terminal Windows via neoTerm": "",
    "test~": "npm run test!~",
    "test!~": "t -npr 'mocha!'",
    "test!": "npm run mocha!",
    "test:short!": "npm run mocha:short!",
    "test:long!": "npm run mocha:long!",
    "test:quick!~": "npm run test!~",
    "test:quick!": "npm run test!",
    "test:gen": "npx ts-node src/test-utils/generate.ts",
    "test:gen!": "nodemon --config nodemon-generate.json \"src/test-utils/generate.ts\" -- --watch",
    "mocha": "npm run node_ram && npx mocha -r ts-node/register \"src/code/**/*-spec.ts\"",
    "mocha:ci": "npm run mocha:coverage",
    "mocha:coverage": "nyc npm run test",
    "mocha!": "npm run node_ram && npx mocha -r ts-node/register \"src/code/**/*-spec.ts\" -w --watch-files \"**/*.ts\"",
    "mocha:all!": "npm run node_ram && npx mocha -r ts-node/register \"src/**/*-spec.ts\" -w --watch-files \"**/*.ts\"",
    "mocha:short!": "npm run node_ram && npx mocha -r ts-node/register \"src/code/**/*-spec.ts\" -w --watch-files \"**/*.ts\" --watch-ignore \"**/*long-spec.ts\" --ignore \"**/*long-spec.ts\"",
    "mocha:long!": "npm run node_ram && npx mocha -r ts-node/register \"src/code/**/*long-spec.ts\" -w --watch-files \"**/*.ts\"",
    "mocha:all-typings": "npm run node_ram && npx mocha -r ts-node/register \"src/code/**/all-typings/**/*-spec.ts\"",
    "mocha:all-typings!": "npm run node_ram && npx mocha -r ts-node/register \"src/code/**/all-typings/**/*-spec.ts\" -w --watch-files \"**/*.ts\"",
    "mocha:all-but!": "npm run node_ram && npx mocha -r ts-node/register \"src/code/**/*long-spec.ts\" -w --watch-files \"**/*.ts\" --watch-ignore \"**/*Function-normal*-typings-spec.ts\" --ignore \"**/*Function-normal*-typings-spec.ts\"",
    "mocha:only!": "npm run node_ram && npx mocha -r ts-node/register \"src/code/**/**values*-spec.ts\" -w --watch-files \"**/*.ts\"",
    "mocha:quick!": "npm run mocha!",
    "mocha!:noverbose": "npm run mocha!",
    "         ####### Other - docker testing etc": "",
    "test:all_node_versions": "./z/test-all-node-versions.sh",
    "test:node_version": "./z/test-node-version.sh",
    "################# Docs": "",
    "docs:build": "npm-run-all docs:clean typedoc",
    "docs:serve": "npx ws --port 8091 --directory ./dist/docs-html",
    "docs!": "npm-run-all --parallel typedoc! docs:serve",
    "docs:clean": "npx rimraf dist/docs-html",
    "         ####### TypeDoc": "",
    "typedoc": "npx typedoc",
    "typedoc!": "nodemon --config nodemon-docs.json --exec npx typedoc",
    "################# Clean, Chores and installing": "",
    "audit": "npm audit",
    "audit:fix": "npm audit fix",
    "clean": "npx rimraf -g dist coverage .nyc_output result junit.xml tmp tsconfig.*.tsbuildinfo src/code/loopzen/__test__/all-typings/_generated",
    "gen": "npm run test:gen",
    "gen!": "npm run test:gen!",
    "chores": "npm run gen",
    "distzen": "echo NOT NEEDED 'distzen'",
    "distzen!": "echo NOT NEEDED 'distzen --watch'",
    "node_ram": "node -e 'const ram=v8.getHeapStatistics().heap_size_limit/(1024*1024);const low=ram<8000;console[low ? `error`:`log`](`${ low ? \"WARNING\" : \"NOTE\"} nodejs heap_size_limit RAM =`, ram)'",
    "################# Formatting & Linting": "",
    "format": "npm-run-all prettier lint:noFail prettier",
    "prettier": "npx prettier --write \"**/*.{ts,js,json}\"",
    "lint": "npx eslint --ignore-path .gitignore \"**/*.{js,ts}\"",
    "lint:fix": "npx eslint --fix --ignore-path .gitignore \"**/*.{js,ts}\"",
    "lint:noFail": "npx eslint --fix --ignore-path .gitignore \"**/*.{js,ts}\" || exit 0"
  },
  "dependencies": {
    "lodash": "^4.17.21"
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@types/chai": "^4.3.16",
    "@types/lodash": "^4.17.6",
    "@types/mocha": "^10.0.7",
    "@types/sinon": "^17.0.3",
    "@typescript-eslint/eslint-plugin": "^6.19.0",
    "@typescript-eslint/parser": "^6.19.0",
    "ansi-colors": "^4.1.3",
    "chai": "^4.4.1",
    "chokidar": "^3.6.0",
    "escape-string-regexp": "^4.0.0",
    "eslint": "^8.57.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-typescript": "^17.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^27.6.3",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-tsdoc": "^0.2.17",
    "eslint-plugin-unicorn": "^50.0.1",
    "fs-jetpack": "^5.1.0",
    "futil-js": "^1.76.2",
    "local-web-server": "^5.3.1",
    "mkdirp": "^3.0.1",
    "mocha": "^10.6.0",
    "nodemon": "^3.1.4",
    "npm-run-all": "^4.1.5",
    "nyc": "^15.1.0",
    "prettier": "^3.3.2",
    "rimraf": "^5.0.7",
    "sinon": "^18.0.0",
    "ts-expect": "^1.3.0",
    "ts-loader": "^9.5.1",
    "ts-mockito": "^2.6.1",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "tsconfig-paths": "^4.2.0",
    "tsutils": "~3.21.0",
    "type-fest": "^4.21.0",
    "typedoc": "^0.26.7",
    "typescript": "5.6.3",
    "upath": "^2.0.1"
  },
  "files": [
    "dist/"
  ],
  "types": "./dist/code/index.d.ts",
  "type": "commonjs",
  "main": "dist/code/index.js",
  "#################### Not technical meta-data": "####################",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DevZen/ZenDash.git"
  },
  "bugs": {
    "url": "https://github.com/DevZen/ZenDash/issues"
  },
  "homepage": "https://github.com/DevZen/ZenDash",
  "author": "Angelos Pikoulas",
  "license": "MIT"
}
